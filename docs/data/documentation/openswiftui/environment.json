{"kind":"symbol","topicSections":[{"title":"Getting the value","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment\/wrappedValue"],"anchor":"Getting-the-value"},{"title":"Initializers","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment\/init(_:)-57l25","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment\/init(_:)-5keyi","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment\/init(_:)-8gsj5"],"generated":true,"anchor":"Initializers"},{"title":"Default Implementations","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment\/DynamicProperty-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"metadata":{"roleHeading":"Structure","modules":[{"name":"OpenSwiftUI"}],"title":"Environment","role":"symbol","externalID":"s:15OpenSwiftUICore11EnvironmentV","symbolKind":"struct","navigatorTitle":[{"text":"Environment","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Data\/Environment\/Environment.swift#L146","fileName":"Environment.swift"},"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}]},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/DynamicProperty","doc:\/\/OpenSwiftUI\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"sections":[],"abstract":[{"text":"A property wrapper that reads a value from a view’s environment.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@frozen"},{"kind":"text","text":" "},{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"Environment"},{"text":" property wrapper to read a value","type":"text"},{"text":" ","type":"text"},{"text":"stored in a view’s environment. Indicate the value to read using an","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EnvironmentValues","isActive":true,"type":"reference"},{"text":" key path in the property declaration. For example, you","type":"text"},{"text":" ","type":"text"},{"text":"can create a property that reads the color scheme of the current","type":"text"},{"text":" ","type":"text"},{"text":"view using the key path of the ","type":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EnvironmentValues\/colorScheme","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"property:","type":"text"}]},{"code":["@Environment(\\.colorScheme) var colorScheme: ColorScheme"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"You can condition a view’s content on the associated value, which","type":"text"},{"text":" ","type":"text"},{"text":"you read from the declared property’s ","type":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment\/wrappedValue","type":"reference","isActive":true},{"text":". As with any property","type":"text"},{"text":" ","type":"text"},{"text":"wrapper, you access the wrapped value by directly referring to the property:","type":"text"}]},{"code":["if colorScheme == .dark { \/\/ Checks the wrapped value.","    DarkContent()","} else {","    LightContent()","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the value changes, OpenSwiftUI updates any parts of your view that depend on"},{"type":"text","text":" "},{"type":"text","text":"the value. For example, that might happen in the above example if the user"},{"type":"text","text":" "},{"type":"text","text":"changes the Appearance settings."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this property wrapper to read — but not set — an environment"},{"type":"text","text":" "},{"type":"text","text":"value. OpenSwiftUI updates some environment values automatically based on system"},{"type":"text","text":" "},{"type":"text","text":"settings and provides reasonable defaults for others. You can override some"},{"type":"text","text":" "},{"type":"text","text":"of these, as well as set custom environment values that you define,"},{"type":"text","text":" "},{"type":"text","text":"using the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View\/environment(_:_:)"},{"type":"text","text":" view modifier."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the complete list of environment values provided by OpenSwiftUI, see the"},{"type":"text","text":" "},{"type":"text","text":"properties of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EnvironmentValues"},{"type":"text","text":" structure. For information about"},{"type":"text","text":" "},{"type":"text","text":"creating custom environment values, see the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EnvironmentKey"},{"type":"text","text":" protocol."}]},{"type":"heading","anchor":"Get-an-observable-object","text":"Get an observable object","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also use "},{"type":"codeVoice","code":"Environment"},{"type":"text","text":" to get an observable object from a view’s"},{"type":"text","text":" "},{"type":"text","text":"environment. The observable object must conform to the"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/openobservation\/main\/documentation\/openobservation\/observable","isActive":true},{"type":"text","text":" "},{"type":"text","text":"protocol, and your app must set the object in the environment using the"},{"type":"text","text":" "},{"type":"text","text":"the object itself or a key path."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To set the object in the environment using the object itself, use the"},{"type":"text","text":" "},{"type":"codeVoice","code":"View\/environment(_:)-4516h"},{"type":"text","text":" modifier:"}]},{"code":["@Observable","class Library {","    var books: [Book] = [Book(), Book(), Book()]","","    var availableBooksCount: Int {","        books.filter(\\.isAvailable).count","    }","}","","@main","struct BookReaderApp: App {","    @State private var library = Library()","","    var body: some Scene {","        WindowGroup {","            LibraryView()","                .environment(library)","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To get the observable object using its type, create a property and provide"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Environment"},{"type":"text","text":" property wrapper the object’s type:"}]},{"code":["struct LibraryView: View {","    @Environment(Library.self) private var library","","    var body: some View {","        \/\/ ...","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"By default, reading an object from the environment returns a non-optional","type":"text"},{"text":" ","type":"text"},{"text":"object when using the object type as the key. This default behavior assumes","type":"text"},{"text":" ","type":"text"},{"text":"that a view in the current hierarchy previously stored a non-optional","type":"text"},{"text":" ","type":"text"},{"text":"instance of the type using the ","type":"text"},{"type":"codeVoice","code":"View\/environment(_:)-4516h"},{"text":" modifier. If","type":"text"},{"text":" ","type":"text"},{"text":"a view attempts to retrieve an object using its type and that object isn’t","type":"text"},{"text":" ","type":"text"},{"text":"in the environment, OpenSwiftUI throws an exception.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"In cases where there is no guarantee that an object is in the environment,","type":"text"},{"text":" ","type":"text"},{"text":"retrieve an optional version of the object as shown in the following code.","type":"text"},{"text":" ","type":"text"},{"text":"If the object isn’t available the environment, OpenSwiftUI returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" ","type":"text"},{"text":"instead of throwing an exception.","type":"text"}]},{"code":["@Environment(Library.self) private var library: Library?"],"syntax":"swift","type":"codeListing"},{"type":"heading","anchor":"Get-an-observable-object-using-a-key-path","text":"Get an observable object using a key path","level":3},{"type":"paragraph","inlineContent":[{"text":"To set the object with a key path, use the ","type":"text"},{"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View\/environment(_:_:)","isActive":true},{"text":" ","type":"text"},{"text":"modifier:","type":"text"}]},{"code":["@Observable","class Library {","    var books: [Book] = [Book(), Book(), Book()]","","    var availableBooksCount: Int {","        books.filter(\\.isAvailable).count","    }","}","","@main","struct BookReaderApp: App {","    @State private var library = Library()","","    var body: some Scene {","        WindowGroup {","            LibraryView()","                .environment(\\.library, library)","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To get the object, create a property and specify the key path:"}]},{"code":["struct LibraryView: View {","    @Environment(\\.library) private var library","","    var body: some View {","        \/\/ ...","    }","}"],"syntax":"swift","type":"codeListing"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openswiftui\/environment"]}],"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI"]]},"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI/Environment/init(_:)-8gsj5":{"abstract":[{"text":"Creates an environment property to read an observable object from the","type":"text"},{"text":" ","type":"text"},{"text":"environment, returning ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if no corresponding object has been set in","type":"text"},{"text":" ","type":"text"},{"text":"the current view’s environment.","type":"text"}],"kind":"symbol","title":"init(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment\/init(_:)-8gsj5","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"url":"\/documentation\/openswiftui\/environment\/init(_:)-8gsj5"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Environment/init(_:)-57l25":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"abstract":[{"text":"Creates an environment property to read an observable object from the","type":"text"},{"text":" ","type":"text"},{"text":"environment.","type":"text"}],"title":"init(_:)","kind":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment\/init(_:)-57l25","role":"symbol","type":"topic","url":"\/documentation\/openswiftui\/environment\/init(_:)-57l25"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Environment":{"url":"\/documentation\/openswiftui\/environment","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that reads a value from a view’s environment."}],"title":"Environment","role":"symbol","navigatorTitle":[{"text":"Environment","kind":"identifier"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/DynamicProperty":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/DynamicProperty","title":"DynamicProperty","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/openswiftui\/dynamicproperty","navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"abstract":[{"type":"text","text":"An interface for a stored variable that updates an external property of a"},{"type":"text","text":" "},{"type":"text","text":"view."}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Environment/init(_:)-5keyi":{"title":"init(_:)","abstract":[{"text":"Creates an environment property to read the specified key path.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment\/init(_:)-5keyi","url":"\/documentation\/openswiftui\/environment\/init(_:)-5keyi","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"EnvironmentValues","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore17EnvironmentValuesV"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"type":"topic"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View/environment(_:_:)":{"url":"\/documentation\/openswiftui\/view\/environment(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"environment","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore17EnvironmentValuesV","text":"EnvironmentValues","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore4ViewP","text":"View","kind":"typeIdentifier"}],"abstract":[{"text":"Sets the environment value of the specified key path to the given value.","type":"text"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View\/environment(_:_:)","kind":"symbol","type":"topic","role":"symbol","title":"environment(_:_:)"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/EnvironmentKey":{"abstract":[{"type":"text","text":"A key for accessing values in the environment."}],"navigatorTitle":[{"text":"EnvironmentKey","kind":"identifier"}],"url":"\/documentation\/openswiftui\/environmentkey","type":"topic","kind":"symbol","title":"EnvironmentKey","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EnvironmentKey","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnvironmentKey","kind":"identifier"}],"role":"symbol"},"doc://OpenSwiftUI/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/OpenSwiftUI\/s8SendableP","type":"unresolvable"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/EnvironmentValues":{"navigatorTitle":[{"text":"EnvironmentValues","kind":"identifier"}],"abstract":[{"type":"text","text":"A collection of environment values propagated through a view hierarchy."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EnvironmentValues","role":"symbol","url":"\/documentation\/openswiftui\/environmentvalues","kind":"symbol","title":"EnvironmentValues","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnvironmentValues","kind":"identifier"}],"type":"topic"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Environment/DynamicProperty-Implementations":{"kind":"article","title":"DynamicProperty Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment\/DynamicProperty-Implementations","type":"topic","url":"\/documentation\/openswiftui\/environment\/dynamicproperty-implementations"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/EnvironmentValues/colorScheme":{"kind":"symbol","url":"\/documentation\/openswiftui\/environmentvalues\/colorscheme","type":"topic","abstract":[{"type":"text","text":"The color scheme of this environment."}],"title":"colorScheme","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EnvironmentValues\/colorScheme","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"colorScheme"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore11ColorSchemeO","text":"ColorScheme"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Environment/wrappedValue":{"url":"\/documentation\/openswiftui\/environment\/wrappedvalue","abstract":[{"type":"text","text":"The current value of the environment property."}],"title":"wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment\/wrappedValue","kind":"symbol","role":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"https://swiftpackageindex.com/openswiftuiproject/openobservation/main/documentation/openobservation/observable":{"title":"Observable","identifier":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/openobservation\/main\/documentation\/openobservation\/observable","type":"link","titleInlineContent":[{"type":"text","text":"Observable"}],"url":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/openobservation\/main\/documentation\/openobservation\/observable"}}}