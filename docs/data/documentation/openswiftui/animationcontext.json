{"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI"]]},"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openswiftui\/animationcontext"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"title":"AnimationContext","role":"symbol","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationContext","kind":"identifier"}],"remoteSource":{"url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Animation\/Animation\/AnimationContext.swift#L95","fileName":"AnimationContext.swift"},"platforms":[{"beta":false,"name":"iOS","deprecated":false,"introducedAt":"13.0","unavailable":false},{"beta":false,"name":"macOS","deprecated":false,"introducedAt":"10.15","unavailable":false},{"beta":false,"name":"tvOS","deprecated":false,"introducedAt":"13.0","unavailable":false},{"beta":false,"name":"visionOS","deprecated":false,"introducedAt":"1.0","unavailable":false},{"beta":false,"name":"watchOS","deprecated":false,"introducedAt":"6.0","unavailable":false}],"externalID":"s:15OpenSwiftUICore16AnimationContextV","roleHeading":"Structure","modules":[{"name":"OpenSwiftUI"}],"navigatorTitle":[{"text":"AnimationContext","kind":"identifier"}]},"topicSections":[{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/environment","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/isLogicallyComplete","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/state"]},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/withState(_:)"]}],"abstract":[{"text":"Contextual values that a custom animation can use to manage state and","type":"text"},{"text":" ","type":"text"},{"text":"access a view’s environment.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimationContext"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:15OpenSwiftUICore16VectorArithmeticP","kind":"typeIdentifier","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/VectorArithmetic","text":"VectorArithmetic"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"inlineContent":[{"text":"The system provides an ","type":"text"},{"type":"codeVoice","code":"AnimationContext"},{"text":" to a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation"},{"text":" instance","type":"text"},{"text":" ","type":"text"},{"text":"so that the animation can store and retrieve values in an instance of","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationState"},{"text":". To access these values, use the context’s","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/state"},{"text":" property.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For more convenient access to state, create an ","type":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey","type":"reference","isActive":true},{"text":" and","type":"text"},{"text":" ","type":"text"},{"text":"extend ","type":"text"},{"type":"codeVoice","code":"AnimationContext"},{"text":" to include a computed property that gets and","type":"text"},{"text":" ","type":"text"},{"text":"sets the ","type":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationState","type":"reference","isActive":true},{"text":" value. Then use this property instead of","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/state","type":"reference","isActive":true},{"text":" to retrieve the state of a custom animation. For","type":"text"},{"text":" ","type":"text"},{"text":"example, the following code creates an animation state key named","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"PausableState"},{"text":". Then the code extends ","type":"text"},{"type":"codeVoice","code":"AnimationContext"},{"text":" to include the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"pausableState"},{"text":" property:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["private struct PausableState<Value: VectorArithmetic>: AnimationStateKey {","    var paused = false","    var pauseTime: TimeInterval = 0.0","","    static var defaultValue: Self { .init() }","}","","extension AnimationContext {","    fileprivate var pausableState: PausableState<Value> {","        get { state[PausableState<Value>.self] }","        set { state[PausableState<Value>.self] = newValue }","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"To access the pausable state, the custom animation "},{"type":"codeVoice","code":"PausableAnimation"},{"type":"text","text":" uses"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"pausableState"},{"type":"text","text":" property instead of the "},{"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/state","isActive":true},{"type":"text","text":" "},{"type":"text","text":"property:"}],"type":"paragraph"},{"syntax":"swift","code":["struct PausableAnimation: CustomAnimation {","    let base: Animation","","    func animate<V>(value: V, time: TimeInterval, context: inout AnimationContext<V>) -> V? where V : VectorArithmetic {","        let paused = context.environment.animationPaused","","        let pausableState = context.pausableState","        var pauseTime = pausableState.pauseTime","        if pausableState.paused != paused {","            pauseTime = time - pauseTime","            context.pausableState = PausableState(paused: paused, pauseTime: pauseTime)","        }","","        let effectiveTime = paused ? pauseTime : time - pauseTime","        let result = base.animate(value: value, time: effectiveTime, context: &context)","        return result","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"The animation can also retrieve environment values of the view that created","type":"text"},{"text":" ","type":"text"},{"text":"the animation. To retrieve a view’s environment value, use the context’s","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/environment","type":"reference"},{"text":" property. For instance, the following code","type":"text"},{"text":" ","type":"text"},{"text":"creates a custom ","type":"text"},{"isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EnvironmentValues","type":"reference"},{"text":" property named ","type":"text"},{"code":"animationPaused","type":"codeVoice"},{"text":", and the","type":"text"},{"text":" ","type":"text"},{"text":"view ","type":"text"},{"code":"PausableAnimationView","type":"codeVoice"},{"text":" uses the property to store the paused state:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["extension EnvironmentValues {","    @Entry var animationPaused: Bool = false","}","","struct PausableAnimationView: View {","    @State private var paused = false","","    var body: some View {","        VStack {","            ...","        }","        .environment(\\.animationPaused, paused)","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"Then the custom animation ","type":"text"},{"type":"codeVoice","code":"PausableAnimation"},{"text":" retrieves the paused state","type":"text"},{"text":" ","type":"text"},{"text":"from the view’s environment using the ","type":"text"},{"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/environment","isActive":true},{"text":" ","type":"text"},{"text":"property:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct PausableAnimation: CustomAnimation {","    func animate<V>(value: V, time: TimeInterval, context: inout AnimationContext<V>) -> V? where V : VectorArithmetic {","        let paused = context.environment.animationPaused","        ...","    }","}"],"type":"codeListing"}],"kind":"content"}],"sections":[],"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI/EnvironmentValues":{"navigatorTitle":[{"text":"EnvironmentValues","kind":"identifier"}],"abstract":[{"type":"text","text":"A collection of environment values propagated through a view hierarchy."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EnvironmentValues","role":"symbol","url":"\/documentation\/openswiftui\/environmentvalues","kind":"symbol","title":"EnvironmentValues","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnvironmentValues","kind":"identifier"}],"type":"topic"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationContext/state":{"role":"symbol","type":"topic","url":"\/documentation\/openswiftui\/animationcontext\/state","title":"state","kind":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/state","abstract":[{"type":"text","text":"The current state of a custom animation."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnimationState","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore14AnimationStateV"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationState":{"url":"\/documentation\/openswiftui\/animationstate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimationState"}],"abstract":[{"type":"text","text":"A container that stores the state for a custom animation."}],"title":"AnimationState","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationState","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnimationState"}],"type":"topic"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/VectorArithmetic":{"title":"VectorArithmetic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"VectorArithmetic"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/VectorArithmetic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"VectorArithmetic"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that can serve as the animatable data of an animatable type."}],"url":"\/documentation\/openswiftui\/vectorarithmetic"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationStateKey":{"url":"\/documentation\/openswiftui\/animationstatekey","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationStateKey","kind":"identifier"}],"abstract":[{"text":"A key for accessing animation state values.","type":"text"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey","role":"symbol","title":"AnimationStateKey","navigatorTitle":[{"text":"AnimationStateKey","kind":"identifier"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationContext":{"title":"AnimationContext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnimationContext"}],"type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext","abstract":[{"type":"text","text":"Contextual values that a custom animation can use to manage state and"},{"type":"text","text":" "},{"type":"text","text":"access a view’s environment."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimationContext"}],"url":"\/documentation\/openswiftui\/animationcontext","kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationContext/isLogicallyComplete":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Set this to "},{"type":"codeVoice","code":"true"},{"type":"text","text":" to indicate that an animation is logically complete."}],"url":"\/documentation\/openswiftui\/animationcontext\/islogicallycomplete","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/isLogicallyComplete","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isLogicallyComplete"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isLogicallyComplete"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/CustomAnimation":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation","role":"symbol","abstract":[{"type":"text","text":"A type that defines how an animatable value changes over time."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomAnimation","kind":"identifier"}],"navigatorTitle":[{"text":"CustomAnimation","kind":"identifier"}],"title":"CustomAnimation","url":"\/documentation\/openswiftui\/customanimation","type":"topic","kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationContext/withState(_:)":{"url":"\/documentation\/openswiftui\/animationcontext\/withstate(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withState"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"AnimationState","preciseIdentifier":"s:15OpenSwiftUICore14AnimationStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"AnimationContext","preciseIdentifier":"s:15OpenSwiftUICore16AnimationContextV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a new context from another one with a state that you provide."}],"title":"withState(_:)","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/withState(_:)","role":"symbol","kind":"symbol","type":"topic"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationContext/environment":{"url":"\/documentation\/openswiftui\/animationcontext\/environment","role":"symbol","title":"environment","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"environment","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EnvironmentValues","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore17EnvironmentValuesV"}],"type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/environment","abstract":[{"type":"text","text":"The current environment of the view that created the custom animation."}]}}}