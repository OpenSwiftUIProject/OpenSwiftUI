{"seeAlsoSections":[{"identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/managing-user-interface-state","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/State","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Binding"],"generated":true,"anchor":"Creating-and-sharing-view-state","title":"Creating and sharing view state"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openswiftui\/bindable"]}],"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable","interfaceLanguage":"swift"},"metadata":{"title":"Bindable","externalID":"s:15OpenSwiftUICore8BindableV","role":"symbol","symbolKind":"struct","platforms":[{"beta":false,"unavailable":false,"name":"iOS","deprecated":false,"introducedAt":"13.0"},{"beta":false,"unavailable":false,"name":"macOS","deprecated":false,"introducedAt":"10.15"},{"beta":false,"unavailable":false,"name":"tvOS","deprecated":false,"introducedAt":"13.0"},{"beta":false,"unavailable":false,"name":"visionOS","deprecated":false,"introducedAt":"1.0"},{"beta":false,"unavailable":false,"name":"watchOS","deprecated":false,"introducedAt":"6.0"}],"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bindable","kind":"identifier"}],"modules":[{"name":"OpenSwiftUI"}],"navigatorTitle":[{"text":"Bindable","kind":"identifier"}],"remoteSource":{"fileName":"Bindable.swift","url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Data\/Binding\/Bindable.swift#L89"}},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/OpenSwiftUI\/s8CopyableP","doc:\/\/OpenSwiftUI\/s12IdentifiableP","doc:\/\/OpenSwiftUI\/s8SendableP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@dynamicMemberLookup"},{"kind":"text","text":" "},{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bindable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this property wrapper to create bindings to mutable properties of a"},{"type":"text","text":" "},{"type":"text","text":"data model object that conforms to the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/openobservation\/main\/documentation\/openobservation\/observable"},{"type":"text","text":" "},{"type":"text","text":"protocol. For example, the following code wraps the "},{"type":"codeVoice","code":"book"},{"type":"text","text":" input with"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Bindable"},{"type":"text","text":". Then it uses a "},{"type":"codeVoice","code":"TextField"},{"type":"text","text":" to change the "},{"type":"codeVoice","code":"title"},{"type":"text","text":" property of"},{"type":"text","text":" "},{"type":"text","text":"a book, and a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Toggle"},{"type":"text","text":" to change the "},{"type":"codeVoice","code":"isAvailable"},{"type":"text","text":" property, using the"},{"type":"text","text":" "},{"type":"codeVoice","code":"$"},{"type":"text","text":" syntax to pass a binding for each property to those controls."}]},{"type":"codeListing","syntax":"swift","code":["@Observable","class Book: Identifiable {","    var title = \"Sample Book Title\"","    var isAvailable = true","}","","struct BookEditView: View {","    @Bindable var book: Book","    @Environment(\\.dismiss) private var dismiss","","    var body: some View {","        Form {","            TextField(\"Title\", text: $book.title)","","            Toggle(\"Book is available\", isOn: $book.isAvailable)","","            Button(\"Close\") {","                dismiss()","            }","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use the "},{"code":"Bindable","type":"codeVoice"},{"type":"text","text":" property wrapper on properties and variables to"},{"type":"text","text":" "},{"type":"text","text":"an "},{"identifier":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/openobservation\/main\/documentation\/openobservation\/observable","isActive":true,"type":"reference","overridingTitle":"Observable","overridingTitleInlineContent":[{"text":"Observable","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"object. This includes global variables, properties that exists outside of"},{"type":"text","text":" "},{"type":"text","text":"OpenSwiftUI types, or even local variables. For example, you can create a"},{"type":"text","text":" "},{"code":"@Bindable","type":"codeVoice"},{"type":"text","text":" variable within a view’s "},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View\/body-1otv4","isActive":true,"type":"reference"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["struct LibraryView: View {","    @State private var books = [Book(), Book(), Book()]","","    var body: some View {","        List(books) { book in","            @Bindable var book = book","            TextField(\"Title\", text: $book.title)","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"@Bindable","type":"codeVoice"},{"text":" variable ","type":"text"},{"code":"book","type":"codeVoice"},{"text":" provides a binding that connects","type":"text"},{"text":" ","type":"text"},{"code":"TextField","type":"codeVoice"},{"text":" to the ","type":"text"},{"code":"title","type":"codeVoice"},{"text":" property of a book so that a person can make","type":"text"},{"text":" ","type":"text"},{"text":"changes directly to the model data.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Use this same approach when you need a binding to a property of an","type":"text"},{"text":" ","type":"text"},{"text":"observable object stored in a view’s environment. For example, the","type":"text"},{"text":" ","type":"text"},{"text":"following code uses the ","type":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment","isActive":true,"type":"reference"},{"text":" property wrapper to retrieve an","type":"text"},{"text":" ","type":"text"},{"text":"instance of the observable type ","type":"text"},{"code":"Book","type":"codeVoice"},{"text":". Then the code creates a ","type":"text"},{"code":"@Bindable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"variable ","type":"text"},{"code":"book","type":"codeVoice"},{"text":" and passes a binding for the ","type":"text"},{"code":"title","type":"codeVoice"},{"text":" property to a","type":"text"},{"text":" ","type":"text"},{"code":"TextField","type":"codeVoice"},{"text":" using the ","type":"text"},{"code":"$","type":"codeVoice"},{"text":" syntax.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct TitleEditView: View {","    @Environment(Book.self) private var book","","    var body: some View {","        @Bindable var book = book","        TextField(\"Title\", text: $book.title)","    }","}"]}]}],"abstract":[{"type":"text","text":"A property wrapper type that supports creating bindings to the mutable"},{"type":"text","text":" "},{"type":"text","text":"properties of observable objects."}],"topicSections":[{"identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/init(_:)","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/init(wrappedValue:)","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/init(projectedValue:)"],"anchor":"Creating-a-bindable-value","title":"Creating a bindable value"},{"identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/wrappedValue","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/projectedValue","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/subscript(dynamicMember:)"],"anchor":"Getting-the-value","title":"Getting the value"},{"identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/Identifiable-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI/Toggle":{"title":"Toggle","kind":"symbol","navigatorTitle":[{"text":"Toggle","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Toggle","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Toggle","url":"\/documentation\/openswiftui\/toggle"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Bindable/init(wrappedValue:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Creates a bindable object from an observable object."}],"title":"init(wrappedValue:)","kind":"symbol","type":"topic","url":"\/documentation\/openswiftui\/bindable\/init(wrappedvalue:)","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/init(wrappedValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Environment":{"url":"\/documentation\/openswiftui\/environment","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that reads a value from a view’s environment."}],"title":"Environment","role":"symbol","navigatorTitle":[{"text":"Environment","kind":"identifier"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Bindable/init(projectedValue:)":{"url":"\/documentation\/openswiftui\/bindable\/init(projectedvalue:)","title":"init(projectedValue:)","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/init(projectedValue:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"projectedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bindable","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore8BindableV"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"abstract":[{"type":"text","text":"Creates a bindable from the value of another bindable."}],"type":"topic"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Bindable/projectedValue":{"abstract":[{"text":"The bindable wrapper for the object that creates bindings to its","type":"text"},{"text":" ","type":"text"},{"text":"properties using dynamic member lookup.","type":"text"}],"title":"projectedValue","kind":"symbol","type":"topic","url":"\/documentation\/openswiftui\/bindable\/projectedvalue","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/projectedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bindable","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore8BindableV"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Bindable/subscript(dynamicMember:)":{"abstract":[{"text":"Returns a binding to the value of a given key path.","type":"text"}],"title":"subscript(dynamicMember:)","kind":"symbol","type":"topic","url":"\/documentation\/openswiftui\/bindable\/subscript(dynamicmember:)","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/subscript(dynamicMember:)","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Subject","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"ReferenceWritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s24ReferenceWritableKeyPathC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore7BindingV"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"doc://OpenSwiftUI/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/OpenSwiftUI\/s8SendableP"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Binding":{"abstract":[{"type":"text","text":"A property wrapper type that can read and write a value owned by a source of"},{"type":"text","text":" "},{"type":"text","text":"truth."}],"url":"\/documentation\/openswiftui\/binding","type":"topic","navigatorTitle":[{"text":"Binding","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Binding","title":"Binding","kind":"symbol","role":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/managing-user-interface-state":{"abstract":[{"type":"text","text":"Encapsulate view-specific data within your app’s view hierarchy to make your"},{"type":"text","text":" "},{"type":"text","text":"views reusable."}],"title":"Managing user interface state","kind":"article","type":"topic","url":"\/documentation\/openswiftui\/managing-user-interface-state","role":"article","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/managing-user-interface-state"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Bindable/Identifiable-Implementations":{"abstract":[],"title":"Identifiable Implementations","kind":"article","type":"topic","url":"\/documentation\/openswiftui\/bindable\/identifiable-implementations","role":"collectionGroup","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/Identifiable-Implementations"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View/body-1otv4":{"defaultImplementations":3,"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore4ViewP4BodyQa","text":"Body","kind":"typeIdentifier"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View\/body-1otv4","abstract":[{"text":"The content and behavior of the view.","type":"text"}],"required":true,"kind":"symbol","url":"\/documentation\/openswiftui\/view\/body-1otv4","title":"body","role":"symbol"},"https://swiftpackageindex.com/openswiftuiproject/openobservation/main/documentation/openobservation/observable":{"url":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/openobservation\/main\/documentation\/openobservation\/observable","identifier":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/openobservation\/main\/documentation\/openobservation\/observable","titleInlineContent":[{"type":"text","text":"Observable"}],"type":"link","title":"Observable"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/State":{"navigatorTitle":[{"text":"State","kind":"identifier"}],"abstract":[{"text":"A property wrapper type that can read and write a value managed by OpenSwiftUI.","type":"text"}],"title":"State","kind":"symbol","type":"topic","url":"\/documentation\/openswiftui\/state","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/State","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Bindable/init(_:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Observable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"Creates a bindable object from an observable object."}],"title":"init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/openswiftui\/bindable\/init(_:)","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Bindable":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable","title":"Bindable","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bindable"}],"role":"symbol","kind":"symbol","url":"\/documentation\/openswiftui\/bindable","navigatorTitle":[{"kind":"identifier","text":"Bindable"}],"abstract":[{"type":"text","text":"A property wrapper type that supports creating bindings to the mutable"},{"type":"text","text":" "},{"type":"text","text":"properties of observable objects."}]},"doc://OpenSwiftUI/s12IdentifiableP":{"type":"unresolvable","identifier":"doc:\/\/OpenSwiftUI\/s12IdentifiableP","title":"Swift.Identifiable"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Bindable/wrappedValue":{"type":"topic","kind":"symbol","title":"wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/openswiftui\/bindable\/wrappedvalue","role":"symbol","abstract":[{"type":"text","text":"The wrapped object."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable\/wrappedValue"},"doc://OpenSwiftUI/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/OpenSwiftUI\/s8CopyableP"}}}