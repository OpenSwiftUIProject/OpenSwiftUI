{"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EquatableView"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EquatableView\/task(id:priority:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"task","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","preciseIdentifier":"s:15OpenSwiftUICore4ViewP0aB2UIE4task2id8priority_Qrqd___ScPyyYaYbctSQRd__lFQO1Tqd__mfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"priority","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TaskPriority","preciseIdentifier":"s:ScP","kind":"typeIdentifier"},{"text":" = .userInitiated, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","text":"View","preciseIdentifier":"s:15OpenSwiftUICore4ViewP","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The task priority to use when creating the asynchronous"},{"type":"text","text":" "},{"type":"text","text":"task. The default priority is"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/taskpriority\/userinitiated","type":"reference"},{"type":"text","text":"."}]}],"name":"priority"},{"content":[{"inlineContent":[{"text":"A closure that OpenSwiftUI calls as an asynchronous task","type":"text"},{"text":" ","type":"text"},{"text":"before the view appears. OpenSwiftUI can automatically cancel the task","type":"text"},{"text":" ","type":"text"},{"text":"after the view disappears before the action completes. If the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"id"},{"text":" value changes, OpenSwiftUI cancels and restarts the task.","type":"text"}],"type":"paragraph"}],"name":"action"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A view that runs the specified action asynchronously before"},{"type":"text","text":" "},{"type":"text","text":"the view appears, or restarts the task when the "},{"type":"codeVoice","code":"id"},{"type":"text","text":" value changes."}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This method behaves like "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View\/task(priority:_:)"},{"type":"text","text":", except that it also"},{"type":"text","text":" "},{"type":"text","text":"cancels and recreates the task when a specified value changes. To detect"},{"type":"text","text":" "},{"type":"text","text":"a change, the modifier tests whether a new value for the "},{"type":"codeVoice","code":"id"},{"type":"text","text":" parameter"},{"type":"text","text":" "},{"type":"text","text":"equals the previous value. For this to work,"},{"type":"text","text":" "},{"type":"text","text":"the value’s type must conform to the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/equatable"},{"type":"text","text":" protocol."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, if you define an equatable "},{"type":"codeVoice","code":"Server"},{"type":"text","text":" type that posts custom"},{"type":"text","text":" "},{"type":"text","text":"notifications whenever its state changes — for example, from "},{"type":"emphasis","inlineContent":[{"type":"text","text":"signed"},{"type":"text","text":" "},{"type":"text","text":"out"}]},{"type":"text","text":" to "},{"type":"emphasis","inlineContent":[{"text":"signed in","type":"text"}]},{"type":"text","text":" — you can use the task modifier to update"},{"type":"text","text":" "},{"type":"text","text":"the contents of a "},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Text","type":"reference","isActive":true},{"type":"text","text":" view to reflect the state of the"},{"type":"text","text":" "},{"type":"text","text":"currently selected server:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Text(status ?? \"Signed Out\")","    .task(id: server) {","        let sequence = NotificationCenter.default.notifications(","            named: .didUpdateStatus,","            object: server","        ).compactMap {","            $0.userInfo?[\"status\"] as? String","        }","        for await value in sequence {","            status = value","        }","    }"]},{"inlineContent":[{"type":"text","text":"This example uses the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/notificationcenter\/3813137-notifications"},{"type":"text","text":" "},{"type":"text","text":"method to create an asynchronous sequence of notifications, given by an"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncsequence"},{"type":"text","text":" "},{"type":"text","text":"instance. The example then maps the notification sequence to a sequence"},{"type":"text","text":" "},{"type":"text","text":"of strings that correspond to values stored with each notification."}],"type":"paragraph"},{"inlineContent":[{"text":"Elsewhere, the server defines a custom ","type":"text"},{"code":"didUpdateStatus","type":"codeVoice"},{"text":" notification:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["extension NSNotification.Name {","    static var didUpdateStatus: NSNotification.Name {","        NSNotification.Name(\"didUpdateStatus\")","    }","}"]},{"inlineContent":[{"type":"text","text":"Whenever the server status changes, like after the user signs in, the"},{"type":"text","text":" "},{"type":"text","text":"server posts a notification of this custom type:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let notification = Notification(","    name: .didUpdateStatus,","    object: self,","    userInfo: [\"status\": \"Signed In\"])","NotificationCenter.default.post(notification)"]},{"inlineContent":[{"text":"The task attached to the ","type":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Text","isActive":true,"type":"reference"},{"text":" view gets and displays the status","type":"text"},{"text":" ","type":"text"},{"text":"value from the notification’s user information dictionary. When the user","type":"text"},{"text":" ","type":"text"},{"text":"chooses a different server, OpenSwiftUI cancels the task and creates a new","type":"text"},{"text":" ","type":"text"},{"text":"one, which then waits for notifications from the new server.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/openswiftui\/equatableview\/task(id:priority:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Adds a task to perform before this view appears or when a specified"},{"type":"text","text":" "},{"type":"text","text":"value changes."}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"remoteSource":{"fileName":"TaskModifier.swift","url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUI\/Modifier\/ViewModifier\/TaskModifier.swift#L147"},"symbolKind":"method","platforms":[{"beta":false,"name":"iOS","introducedAt":"13.0","deprecated":false,"unavailable":false},{"beta":false,"name":"macOS","introducedAt":"10.15","deprecated":false,"unavailable":false},{"beta":false,"name":"tvOS","introducedAt":"13.0","deprecated":false,"unavailable":false},{"beta":false,"name":"visionOS","introducedAt":"1.0","deprecated":false,"unavailable":false},{"beta":false,"name":"watchOS","introducedAt":"6.0","deprecated":false,"unavailable":false}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"task","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore4ViewP0aB2UIE4task2id8priority_Qrqd___ScPyyYaYbctSQRd__lFQO1Tqd__mfp","text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"priority","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:ScP","text":"TaskPriority","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore4ViewP","text":"View","kind":"typeIdentifier"}],"title":"task(id:priority:_:)","extendedModule":"OpenSwiftUICore","modules":[{"relatedModules":["OpenSwiftUICore"],"name":"OpenSwiftUI"}],"role":"symbol","externalID":"s:15OpenSwiftUICore4ViewP0aB2UIE4task2id8priority_Qrqd___ScPyyYaYbctSQRd__lF::SYNTHESIZED::s:11OpenSwiftUI13EquatableViewV"},"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/EquatableView/task(id:priority:_:)":{"kind":"symbol","title":"task(id:priority:_:)","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EquatableView\/task(id:priority:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"task","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore4ViewP0aB2UIE4task2id8priority_Qrqd___ScPyyYaYbctSQRd__lFQO1Tqd__mfp","text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"priority","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:ScP","text":"TaskPriority","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore4ViewP","text":"View","kind":"typeIdentifier"}],"url":"\/documentation\/openswiftui\/equatableview\/task(id:priority:_:)","role":"symbol","type":"topic","abstract":[{"text":"Adds a task to perform before this view appears or when a specified","type":"text"},{"text":" ","type":"text"},{"text":"value changes.","type":"text"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View":{"url":"\/documentation\/openswiftui\/view","abstract":[{"type":"text","text":"A type that represents part of your app’s user interface and provides"},{"type":"text","text":" "},{"type":"text","text":"modifiers that you use to configure views."}],"role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","title":"View","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/EquatableView":{"url":"\/documentation\/openswiftui\/equatableview","navigatorTitle":[{"text":"EquatableView","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EquatableView","kind":"identifier"}],"abstract":[{"type":"text","text":"A view type that compares itself against its previous value and prevents its"},{"type":"text","text":" "},{"type":"text","text":"child updating if its new value is the same as its old value."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/EquatableView","type":"topic","title":"EquatableView","kind":"symbol"},"https://developer.apple.com/documentation/swift/asyncsequence":{"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncsequence","titleInlineContent":[{"type":"text","text":"AsyncSequence"}],"title":"AsyncSequence","url":"https:\/\/developer.apple.com\/documentation\/swift\/asyncsequence"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View/task(priority:_:)":{"title":"task(priority:_:)","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View\/task(priority:_:)","abstract":[{"type":"text","text":"Adds an asynchronous task to perform before this view appears."}],"kind":"symbol","url":"\/documentation\/openswiftui\/view\/task(priority:_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"task"},{"kind":"text","text":"("},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","text":", () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:15OpenSwiftUICore4ViewP"}]},"https://developer.apple.com/documentation/swift/equatable":{"type":"link","titleInlineContent":[{"type":"text","text":"Equatable"}],"url":"https:\/\/developer.apple.com\/documentation\/swift\/equatable","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/equatable","title":"Equatable"},"https://developer.apple.com/documentation/foundation/notificationcenter/3813137-notifications":{"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/notificationcenter\/3813137-notifications","titleInlineContent":[{"type":"text","text":"notifications(named:object:)"}],"title":"notifications(named:object:)","url":"https:\/\/developer.apple.com\/documentation\/foundation\/notificationcenter\/3813137-notifications"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Text":{"abstract":[],"role":"symbol","navigatorTitle":[{"text":"Text","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Text","kind":"identifier"}],"url":"\/documentation\/openswiftui\/text","kind":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Text","title":"Text"},"https://developer.apple.com/documentation/swift/taskpriority/userinitiated":{"type":"link","titleInlineContent":[{"type":"text","text":"userInitiated"}],"url":"https:\/\/developer.apple.com\/documentation\/swift\/taskpriority\/userinitiated","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/taskpriority\/userinitiated","title":"userInitiated"}}}