{"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Spacer\/onChange(of:perform:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"symbolKind":"method","extendedModule":"OpenSwiftUICore","externalID":"s:15OpenSwiftUICore4ViewPAAE8onChange2of7performQrqd___yqd__ctSQRd__lF::SYNTHESIZED::s:15OpenSwiftUICore6SpacerV","roleHeading":"Instance Method","title":"onChange(of:perform:)","remoteSource":{"fileName":"ValueActionModifier.swift","url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Modifier\/ViewModifier\/ValueActionModifier.swift#L98"},"platforms":[{"beta":false,"unavailable":false,"name":"iOS","deprecated":false,"introducedAt":"13.0"},{"beta":false,"unavailable":false,"name":"macOS","deprecated":false,"introducedAt":"10.15"},{"beta":false,"unavailable":false,"name":"tvOS","deprecated":false,"introducedAt":"13.0"},{"beta":false,"unavailable":false,"name":"visionOS","deprecated":false,"introducedAt":"1.0"},{"beta":false,"unavailable":false,"name":"watchOS","deprecated":false,"introducedAt":"6.0"},{"message":"Use `onChange` with a two or zero parameter action closure instead.","unavailable":false,"deprecated":true,"beta":false}],"role":"symbol","modules":[{"relatedModules":["OpenSwiftUICore"],"name":"OpenSwiftUI"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore4ViewP"}]},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use `onChange` with a two or zero parameter action closure instead."}],"type":"paragraph"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openswiftui\/spacer\/onchange(of:perform:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"perform"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:15OpenSwiftUICore4ViewP","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The value to check when determining whether to run the","type":"text"},{"text":" ","type":"text"},{"text":"closure. The value must conform to the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/equatable","type":"reference"},{"text":" ","type":"text"},{"text":"protocol.","type":"text"}]}]},{"name":"action","content":[{"inlineContent":[{"text":"A closure to run when the value changes. The closure","type":"text"},{"text":" ","type":"text"},{"text":"takes a ","type":"text"},{"code":"newValue","type":"codeVoice"},{"text":" parameter that indicates the updated","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A view that runs an action when the specified value changes.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Use this modifier to run a closure when a value like"},{"type":"text","text":" "},{"type":"text","text":"an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment"},{"type":"text","text":" value or a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Binding"},{"type":"text","text":" changes."},{"type":"text","text":" "},{"type":"text","text":"For example, you can clear a cache when you notice"},{"type":"text","text":" "},{"type":"text","text":"that the view’s scene moves to the background:"}],"type":"paragraph"},{"code":["struct ContentView: View {","    @Environment(\\.scenePhase) private var scenePhase","    @StateObject private var cache = DataCache()","","    var body: some View {","        MyView()","            .onChange(of: scenePhase) { newScenePhase in","                if newScenePhase == .background {","                    cache.empty()","                }","            }","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"OpenSwiftUI passes the new value into the closure. You can also capture the","type":"text"},{"text":" ","type":"text"},{"text":"previous value to compare it to the new value. For example, in","type":"text"},{"text":" ","type":"text"},{"text":"the following code example, ","type":"text"},{"type":"codeVoice","code":"PlayerView"},{"text":" passes both the old and new","type":"text"},{"text":" ","type":"text"},{"text":"values to the model.","type":"text"}],"type":"paragraph"},{"code":["struct PlayerView: View {","    var episode: Episode","    @State private var playState: PlayState = .paused","","    var body: some View {","        VStack {","            Text(episode.title)","            Text(episode.showTitle)","            PlayButton(playState: $playState)","        }","        .onChange(of: playState) { [playState] newState in","            model.playStateDidChange(from: playState, to: newState)","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"The system may call the action closure on the main actor, so avoid","type":"text"},{"text":" ","type":"text"},{"text":"long-running tasks in the closure. If you need to perform such tasks,","type":"text"},{"text":" ","type":"text"},{"text":"detach an asynchronous background task.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Important: This modifier is deprecated and has been replaced with new"},{"type":"text","text":" "},{"type":"text","text":"versions that include either zero or two parameters within the closure,"},{"type":"text","text":" "},{"type":"text","text":"unlike this version that includes one parameter. This deprecated version"},{"type":"text","text":" "},{"type":"text","text":"and the new versions behave differently with respect to how they execute"},{"type":"text","text":" "},{"type":"text","text":"the action closure, specifically when the closure captures other values."},{"type":"text","text":" "},{"type":"text","text":"Using the deprecated API, the closure is run with captured values that"},{"type":"text","text":" "},{"type":"text","text":"represent the “old” state. With the replacement API, the closure is run"},{"type":"text","text":" "},{"type":"text","text":"with captured values that represent the “new” state, which makes it"},{"type":"text","text":" "},{"type":"text","text":"easier to correctly perform updates that rely on supplementary values"},{"type":"text","text":" "},{"type":"text","text":"(that may or may not have changed) in addition to the changed value that"},{"type":"text","text":" "},{"type":"text","text":"triggered the action."}],"type":"paragraph"},{"name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This modifier is deprecated and has been replaced with new"},{"type":"text","text":" "},{"type":"text","text":"versions that include either zero or two parameters within the"},{"type":"text","text":" "},{"type":"text","text":"closure, unlike this version that includes one parameter. This"},{"type":"text","text":" "},{"type":"text","text":"deprecated version and the new versions behave differently with"},{"type":"text","text":" "},{"type":"text","text":"respect to how they execute the action closure, specifically when the"},{"type":"text","text":" "},{"type":"text","text":"closure captures other values. Using the deprecated API, the closure"},{"type":"text","text":" "},{"type":"text","text":"is run with captured values that represent the “old” state. With the"},{"type":"text","text":" "},{"type":"text","text":"replacement API, the closure is run with captured values that"},{"type":"text","text":" "},{"type":"text","text":"represent the “new” state, which makes it easier to correctly perform"},{"type":"text","text":" "},{"type":"text","text":"updates that rely on supplementary values (that may or may not have"},{"type":"text","text":" "},{"type":"text","text":"changed) in addition to the changed value that triggered the action."}]}],"type":"aside"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Spacer"]]},"abstract":[{"text":"Performs an action when a specified value changes.","type":"text"}],"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI/Binding":{"abstract":[{"type":"text","text":"A property wrapper type that can read and write a value owned by a source of"},{"type":"text","text":" "},{"type":"text","text":"truth."}],"url":"\/documentation\/openswiftui\/binding","type":"topic","navigatorTitle":[{"text":"Binding","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Binding","title":"Binding","kind":"symbol","role":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"https://developer.apple.com/documentation/swift/equatable":{"url":"https:\/\/developer.apple.com\/documentation\/swift\/equatable","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/equatable","titleInlineContent":[{"type":"text","text":"Equatable"}],"type":"link","title":"Equatable"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Spacer":{"url":"\/documentation\/openswiftui\/spacer","navigatorTitle":[{"kind":"identifier","text":"Spacer"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Spacer"}],"abstract":[{"type":"text","text":"A flexible space that expands along the major axis of its containing stack"},{"type":"text","text":" "},{"type":"text","text":"layout, or on both axes if not contained in a stack."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Spacer","type":"topic","title":"Spacer","kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Environment":{"url":"\/documentation\/openswiftui\/environment","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that reads a value from a view’s environment."}],"title":"Environment","role":"symbol","navigatorTitle":[{"text":"Environment","kind":"identifier"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Spacer/onChange(of:perform:)":{"kind":"symbol","title":"onChange(of:perform:)","abstract":[{"text":"Performs an action when a specified value changes.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore4ViewP","text":"View","kind":"typeIdentifier"}],"deprecated":true,"type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Spacer\/onChange(of:perform:)","url":"\/documentation\/openswiftui\/spacer\/onchange(of:perform:)"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View":{"url":"\/documentation\/openswiftui\/view","abstract":[{"type":"text","text":"A type that represents part of your app’s user interface and provides"},{"type":"text","text":" "},{"type":"text","text":"modifiers that you use to configure views."}],"role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","title":"View","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"kind":"symbol"}}}