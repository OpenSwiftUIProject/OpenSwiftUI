{"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationState"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openswiftui\/animationstate\/subscript(_:)"]}],"abstract":[{"text":"Accesses the state for a custom key.","type":"text"}],"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationState\/subscript(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"K"},{"kind":"text","text":">("},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:15OpenSwiftUICore17AnimationStateKeyP5ValueQa","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey\/Value"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"AnimationStateKey","preciseIdentifier":"s:15OpenSwiftUICore17AnimationStateKeyP","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a custom animation state value by defining a key that conforms"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey"},{"type":"text","text":" protocol and provide the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey\/defaultValue"},{"type":"text","text":" for the key. Also include properties"},{"type":"text","text":" "},{"type":"text","text":"to read and write state values that your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation"},{"type":"text","text":" uses. For"},{"type":"text","text":" "},{"type":"text","text":"example, the following code defines a key named "},{"type":"codeVoice","code":"PausableState"},{"type":"text","text":" that"},{"type":"text","text":" "},{"type":"text","text":"has two state values, "},{"type":"codeVoice","code":"paused"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pauseTime"},{"type":"text","text":":"}]},{"type":"codeListing","code":["private struct PausableState<Value: VectorArithmetic>: AnimationStateKey {","    var paused = false","    var pauseTime: TimeInterval = 0.0","","    static var defaultValue: Self { .init() }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use that key with the subscript operator of the "},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationState","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"structure to get and set a value for the key. For more convenient"},{"type":"text","text":" "},{"type":"text","text":"access to the key value, extend "},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext","type":"reference","isActive":true},{"type":"text","text":" with a computed"},{"type":"text","text":" "},{"type":"text","text":"property that gets and sets the keyâ€™s value."}]},{"type":"codeListing","code":["extension AnimationContext {","    fileprivate var pausableState: PausableState<Value> {","        get { state[PausableState<Value>.self] }","        set { state[PausableState<Value>.self] = newValue }","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"To access the state values in a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation"},{"text":", call the custom","type":"text"},{"text":" ","type":"text"},{"text":"computed property, then read and write the state values that the","type":"text"},{"text":" ","type":"text"},{"text":"custom ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey"},{"text":" provides.","type":"text"}]},{"type":"codeListing","code":["struct PausableAnimation: CustomAnimation {","    let base: Animation","","    func animate<V>(value: V, time: TimeInterval, context: inout AnimationContext<V>) -> V? where V : VectorArithmetic {","        let paused = context.environment.animationPaused","","        let pausableState = context.pausableState","        var pauseTime = pausableState.pauseTime","        if pausableState.paused != paused {","            pauseTime = time - pauseTime","            context.pausableState = PausableState(paused: paused, pauseTime: pauseTime)","        }","","        let effectiveTime = paused ? pauseTime : time - pauseTime","        let result = base.animate(value: value, time: effectiveTime, context: &context)","        return result","    }","}"],"syntax":"swift"}]}],"kind":"symbol","metadata":{"externalID":"s:15OpenSwiftUICore14AnimationStateVy5ValueQyd__qd__mcAA0dE3KeyRd__luip","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Animation\/Animation\/AnimationState.swift#L202","fileName":"AnimationState.swift"},"symbolKind":"subscript","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"K","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore17AnimationStateKeyP5ValueQa"}],"modules":[{"name":"OpenSwiftUI"}],"roleHeading":"Instance Subscript","title":"subscript(_:)","platforms":[{"introducedAt":"13.0","deprecated":false,"beta":false,"unavailable":false,"name":"iOS"},{"introducedAt":"10.15","deprecated":false,"beta":false,"unavailable":false,"name":"macOS"},{"introducedAt":"13.0","deprecated":false,"beta":false,"unavailable":false,"name":"tvOS"},{"introducedAt":"1.0","deprecated":false,"beta":false,"unavailable":false,"name":"visionOS"},{"introducedAt":"6.0","deprecated":false,"beta":false,"unavailable":false,"name":"watchOS"}]},"sections":[],"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationState/subscript(_:)":{"abstract":[{"type":"text","text":"Accesses the state for a custom key."}],"url":"\/documentation\/openswiftui\/animationstate\/subscript(_:)","type":"topic","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"K","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore17AnimationStateKeyP5ValueQa","text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationState\/subscript(_:)","title":"subscript(_:)","kind":"symbol","role":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationStateKey":{"url":"\/documentation\/openswiftui\/animationstatekey","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationStateKey","kind":"identifier"}],"abstract":[{"text":"A key for accessing animation state values.","type":"text"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey","role":"symbol","title":"AnimationStateKey","navigatorTitle":[{"text":"AnimationStateKey","kind":"identifier"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/CustomAnimation":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation","role":"symbol","abstract":[{"type":"text","text":"A type that defines how an animatable value changes over time."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomAnimation","kind":"identifier"}],"navigatorTitle":[{"text":"CustomAnimation","kind":"identifier"}],"title":"CustomAnimation","url":"\/documentation\/openswiftui\/customanimation","type":"topic","kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationStateKey/defaultValue":{"kind":"symbol","title":"defaultValue","url":"\/documentation\/openswiftui\/animationstatekey\/defaultvalue","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey\/defaultValue","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"defaultValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore17AnimationStateKeyP5ValueQa"}],"type":"topic","required":true,"abstract":[{"type":"text","text":"The default value for the animation state key."}],"role":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationState":{"url":"\/documentation\/openswiftui\/animationstate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimationState"}],"abstract":[{"type":"text","text":"A container that stores the state for a custom animation."}],"title":"AnimationState","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationState","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnimationState"}],"type":"topic"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationContext":{"title":"AnimationContext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnimationContext"}],"type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext","abstract":[{"type":"text","text":"Contextual values that a custom animation can use to manage state and"},{"type":"text","text":" "},{"type":"text","text":"access a viewâ€™s environment."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimationContext"}],"url":"\/documentation\/openswiftui\/animationcontext","kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationStateKey/Value":{"kind":"symbol","type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey\/Value","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"title":"Value","abstract":[{"type":"text","text":"The associated type representing the type of the animation state keyâ€™s"},{"type":"text","text":" "},{"type":"text","text":"value."}],"url":"\/documentation\/openswiftui\/animationstatekey\/value","role":"symbol"}}}