{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openswiftui\/button\/onchange(of:perform:)"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"perform"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","text":"View","preciseIdentifier":"s:15OpenSwiftUICore4ViewP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"},{"kind":"text","text":"\n"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The value to check when determining whether to run the","type":"text"},{"text":" ","type":"text"},{"text":"closure. The value must conform to the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/equatable"},{"text":" ","type":"text"},{"text":"protocol.","type":"text"}]}]},{"name":"action","content":[{"inlineContent":[{"type":"text","text":"A closure to run when the value changes. The closure"},{"type":"text","text":" "},{"type":"text","text":"takes a "},{"type":"codeVoice","code":"newValue"},{"type":"text","text":" parameter that indicates the updated"},{"type":"text","text":" "},{"type":"text","text":"value."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A view that runs an action when the specified value changes.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Use this modifier to run a closure when a value like","type":"text"},{"text":" ","type":"text"},{"text":"an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment"},{"text":" value or a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Binding"},{"text":" changes.","type":"text"},{"text":" ","type":"text"},{"text":"For example, you can clear a cache when you notice","type":"text"},{"text":" ","type":"text"},{"text":"that the view’s scene moves to the background:","type":"text"}]},{"code":["struct ContentView: View {","    @Environment(\\.scenePhase) private var scenePhase","    @StateObject private var cache = DataCache()","","    var body: some View {","        MyView()","            .onChange(of: scenePhase) { newScenePhase in","                if newScenePhase == .background {","                    cache.empty()","                }","            }","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"OpenSwiftUI passes the new value into the closure. You can also capture the"},{"type":"text","text":" "},{"type":"text","text":"previous value to compare it to the new value. For example, in"},{"type":"text","text":" "},{"type":"text","text":"the following code example, "},{"type":"codeVoice","code":"PlayerView"},{"type":"text","text":" passes both the old and new"},{"type":"text","text":" "},{"type":"text","text":"values to the model."}]},{"code":["struct PlayerView: View {","    var episode: Episode","    @State private var playState: PlayState = .paused","","    var body: some View {","        VStack {","            Text(episode.title)","            Text(episode.showTitle)","            PlayButton(playState: $playState)","        }","        .onChange(of: playState) { [playState] newState in","            model.playStateDidChange(from: playState, to: newState)","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The system may call the action closure on the main actor, so avoid","type":"text"},{"text":" ","type":"text"},{"text":"long-running tasks in the closure. If you need to perform such tasks,","type":"text"},{"text":" ","type":"text"},{"text":"detach an asynchronous background task.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Important: This modifier is deprecated and has been replaced with new"},{"type":"text","text":" "},{"type":"text","text":"versions that include either zero or two parameters within the closure,"},{"type":"text","text":" "},{"type":"text","text":"unlike this version that includes one parameter. This deprecated version"},{"type":"text","text":" "},{"type":"text","text":"and the new versions behave differently with respect to how they execute"},{"type":"text","text":" "},{"type":"text","text":"the action closure, specifically when the closure captures other values."},{"type":"text","text":" "},{"type":"text","text":"Using the deprecated API, the closure is run with captured values that"},{"type":"text","text":" "},{"type":"text","text":"represent the “old” state. With the replacement API, the closure is run"},{"type":"text","text":" "},{"type":"text","text":"with captured values that represent the “new” state, which makes it"},{"type":"text","text":" "},{"type":"text","text":"easier to correctly perform updates that rely on supplementary values"},{"type":"text","text":" "},{"type":"text","text":"(that may or may not have changed) in addition to the changed value that"},{"type":"text","text":" "},{"type":"text","text":"triggered the action."}]},{"name":"Important","type":"aside","style":"important","content":[{"inlineContent":[{"text":"This modifier is deprecated and has been replaced with new","type":"text"},{"text":" ","type":"text"},{"text":"versions that include either zero or two parameters within the","type":"text"},{"text":" ","type":"text"},{"text":"closure, unlike this version that includes one parameter. This","type":"text"},{"text":" ","type":"text"},{"text":"deprecated version and the new versions behave differently with","type":"text"},{"text":" ","type":"text"},{"text":"respect to how they execute the action closure, specifically when the","type":"text"},{"text":" ","type":"text"},{"text":"closure captures other values. Using the deprecated API, the closure","type":"text"},{"text":" ","type":"text"},{"text":"is run with captured values that represent the “old” state. With the","type":"text"},{"text":" ","type":"text"},{"text":"replacement API, the closure is run with captured values that","type":"text"},{"text":" ","type":"text"},{"text":"represent the “new” state, which makes it easier to correctly perform","type":"text"},{"text":" ","type":"text"},{"text":"updates that rely on supplementary values (that may or may not have","type":"text"},{"text":" ","type":"text"},{"text":"changed) in addition to the changed value that triggered the action.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Button"]]},"abstract":[{"type":"text","text":"Performs an action when a specified value changes."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"extendedModule":"OpenSwiftUICore","modules":[{"name":"OpenSwiftUI","relatedModules":["OpenSwiftUICore"]}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore4ViewP","text":"View"}],"role":"symbol","externalID":"s:15OpenSwiftUICore4ViewPAAE8onChange2of7performQrqd___yqd__ctSQRd__lF::SYNTHESIZED::s:11OpenSwiftUI6ButtonV","roleHeading":"Instance Method","symbolKind":"method","platforms":[{"name":"iOS","unavailable":false,"deprecated":false,"beta":false,"introducedAt":"13.0"},{"name":"macOS","unavailable":false,"deprecated":false,"beta":false,"introducedAt":"10.15"},{"name":"tvOS","unavailable":false,"deprecated":false,"beta":false,"introducedAt":"13.0"},{"name":"visionOS","unavailable":false,"deprecated":false,"beta":false,"introducedAt":"1.0"},{"name":"watchOS","unavailable":false,"deprecated":false,"beta":false,"introducedAt":"6.0"},{"message":"Use `onChange` with a two or zero parameter action closure instead.","unavailable":false,"deprecated":true,"beta":false}],"title":"onChange(of:perform:)","remoteSource":{"url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Modifier\/ViewModifier\/ValueActionModifier.swift#L98","fileName":"ValueActionModifier.swift"}},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use `onChange` with a two or zero parameter action closure instead."}],"type":"paragraph"}],"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Button\/onChange(of:perform:)","interfaceLanguage":"swift"},"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI/Environment":{"url":"\/documentation\/openswiftui\/environment","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that reads a value from a view’s environment."}],"title":"Environment","role":"symbol","navigatorTitle":[{"text":"Environment","kind":"identifier"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Button/onChange(of:perform:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore4ViewP","text":"View"}],"deprecated":true,"type":"topic","abstract":[{"type":"text","text":"Performs an action when a specified value changes."}],"kind":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Button\/onChange(of:perform:)","title":"onChange(of:perform:)","role":"symbol","url":"\/documentation\/openswiftui\/button\/onchange(of:perform:)"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View":{"url":"\/documentation\/openswiftui\/view","abstract":[{"type":"text","text":"A type that represents part of your app’s user interface and provides"},{"type":"text","text":" "},{"type":"text","text":"modifiers that you use to configure views."}],"role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","title":"View","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"https://developer.apple.com/documentation/swift/equatable":{"titleInlineContent":[{"type":"text","text":"Equatable"}],"url":"https:\/\/developer.apple.com\/documentation\/swift\/equatable","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/equatable","title":"Equatable"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Binding":{"abstract":[{"type":"text","text":"A property wrapper type that can read and write a value owned by a source of"},{"type":"text","text":" "},{"type":"text","text":"truth."}],"url":"\/documentation\/openswiftui\/binding","type":"topic","navigatorTitle":[{"text":"Binding","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Binding","title":"Binding","kind":"symbol","role":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Button":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Button","kind":"identifier"}],"url":"\/documentation\/openswiftui\/button","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Button","role":"symbol","navigatorTitle":[{"text":"Button","kind":"identifier"}],"title":"Button","kind":"symbol","abstract":[],"type":"topic"}}}