{"abstract":[{"type":"text","text":"Adds a modifier for this view that fires an action when a specific"},{"type":"text","text":" "},{"type":"text","text":"value changes."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initial"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = false, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","preciseIdentifier":"s:15OpenSwiftUICore4ViewP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"},{"kind":"text","text":"\n"}]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The value to check against when determining whether","type":"text"},{"text":" ","type":"text"},{"text":"to run the closure.","type":"text"}]}]},{"name":"initial","content":[{"inlineContent":[{"type":"text","text":"Whether the action should be run when this view initially"},{"type":"text","text":" "},{"type":"text","text":"appears."}],"type":"paragraph"}]},{"name":"action","content":[{"inlineContent":[{"text":"A closure to run when the value changes.","type":"text"}],"type":"paragraph"}]},{"name":"oldValue","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The old value that failed the comparison check (or the"},{"type":"text","text":" "},{"type":"text","text":"initial value when requested)."}]}]},{"name":"newValue","content":[{"type":"paragraph","inlineContent":[{"text":"The new value that failed the comparison check.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A view that fires an action when the specified value changes.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use "},{"type":"codeVoice","code":"onChange"},{"type":"text","text":" to trigger a side effect as the result of a"},{"type":"text","text":" "},{"type":"text","text":"value changing, such as an "},{"type":"codeVoice","code":"Environment"},{"type":"text","text":" key or a "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The system may call the action closure on the main actor, so avoid"},{"type":"text","text":" "},{"type":"text","text":"long-running tasks in the closure. If you need to perform such tasks,"},{"type":"text","text":" "},{"type":"text","text":"detach an asynchronous background task."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the value changes, the new version of the closure will be called,"},{"type":"text","text":" "},{"type":"text","text":"so any captured values will have their values from the time that the"},{"type":"text","text":" "},{"type":"text","text":"observed value has its new value. The old and new observed values are"},{"type":"text","text":" "},{"type":"text","text":"passed into the closure. In the following code example, "},{"type":"codeVoice","code":"PlayerView"},{"type":"text","text":" "},{"type":"text","text":"passes both the old and new values to the model."}]},{"type":"codeListing","syntax":"swift","code":["struct PlayerView: View {","    var episode: Episode","    @State private var playState: PlayState = .paused","","    var body: some View {","        VStack {","            Text(episode.title)","            Text(episode.showTitle)","            PlayButton(playState: $playState)","        }","        .onChange(of: playState) { oldState, newState in","            model.playStateDidChange(from: oldState, to: newState)","        }","    }","}"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openswiftui\/primitivebuttonstyleconfiguration\/label-swift.struct\/onchange(of:initial:_:)-1tdqq"]}],"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/PrimitiveButtonStyleConfiguration\/Label-swift.struct\/onChange(of:initial:_:)-1tdqq","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initial"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:15OpenSwiftUICore4ViewP","kind":"typeIdentifier","text":"View"}],"remoteSource":{"fileName":"ValueActionModifier.swift","url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Modifier\/ViewModifier\/ValueActionModifier.swift#L263"},"roleHeading":"Instance Method","externalID":"s:15OpenSwiftUICore4ViewPAAE8onChange2of7initial_Qrqd___Sbyqd___qd__tctSQRd__lF::SYNTHESIZED::s:11OpenSwiftUI33PrimitiveButtonStyleConfigurationV5LabelV","extendedModule":"OpenSwiftUICore","platforms":[{"introducedAt":"13.0","name":"iOS","unavailable":false,"beta":false,"deprecated":false},{"introducedAt":"10.15","name":"macOS","unavailable":false,"beta":false,"deprecated":false},{"introducedAt":"13.0","name":"tvOS","unavailable":false,"beta":false,"deprecated":false},{"introducedAt":"1.0","name":"visionOS","unavailable":false,"beta":false,"deprecated":false},{"introducedAt":"6.0","name":"watchOS","unavailable":false,"beta":false,"deprecated":false}],"modules":[{"name":"OpenSwiftUI","relatedModules":["OpenSwiftUICore"]}],"title":"onChange(of:initial:_:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/PrimitiveButtonStyleConfiguration","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/PrimitiveButtonStyleConfiguration\/Label-swift.struct"]]},"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI/PrimitiveButtonStyleConfiguration/Label-swift.struct":{"url":"\/documentation\/openswiftui\/primitivebuttonstyleconfiguration\/label-swift.struct","type":"topic","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/PrimitiveButtonStyleConfiguration\/Label-swift.struct","abstract":[],"kind":"symbol","title":"PrimitiveButtonStyleConfiguration.Label","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Label","kind":"identifier"}],"navigatorTitle":[{"text":"Label","kind":"identifier"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/PrimitiveButtonStyleConfiguration/Label-swift.struct/onChange(of:initial:_:)-1tdqq":{"title":"onChange(of:initial:_:)","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/PrimitiveButtonStyleConfiguration\/Label-swift.struct\/onChange(of:initial:_:)-1tdqq","type":"topic","kind":"symbol","abstract":[{"text":"Adds a modifier for this view that fires an action when a specific","type":"text"},{"text":" ","type":"text"},{"text":"value changes.","type":"text"}],"role":"symbol","url":"\/documentation\/openswiftui\/primitivebuttonstyleconfiguration\/label-swift.struct\/onchange(of:initial:_:)-1tdqq","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initial"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:15OpenSwiftUICore4ViewP"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View":{"url":"\/documentation\/openswiftui\/view","abstract":[{"type":"text","text":"A type that represents part of your app’s user interface and provides"},{"type":"text","text":" "},{"type":"text","text":"modifiers that you use to configure views."}],"role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","title":"View","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/PrimitiveButtonStyleConfiguration":{"url":"\/documentation\/openswiftui\/primitivebuttonstyleconfiguration","type":"topic","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/PrimitiveButtonStyleConfiguration","abstract":[],"kind":"symbol","title":"PrimitiveButtonStyleConfiguration","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrimitiveButtonStyleConfiguration","kind":"identifier"}],"navigatorTitle":[{"text":"PrimitiveButtonStyleConfiguration","kind":"identifier"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"}}}