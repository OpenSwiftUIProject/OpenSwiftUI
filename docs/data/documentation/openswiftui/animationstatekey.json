{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationStateKey","kind":"identifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"To access animation state from an "},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext","isActive":true,"type":"reference"},{"type":"text","text":" in a custom"},{"type":"text","text":" "},{"type":"text","text":"animation, create an "},{"type":"codeVoice","code":"AnimationStateKey"},{"type":"text","text":". For example, the following"},{"type":"text","text":" "},{"type":"text","text":"code creates an animation state key named "},{"type":"codeVoice","code":"PausableState"},{"type":"text","text":" and sets the"},{"type":"text","text":" "},{"type":"text","text":"value for the required "},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey\/defaultValue","isActive":true,"type":"reference"},{"type":"text","text":" property. The code also defines"},{"type":"text","text":" "},{"type":"text","text":"properties for state values that the custom animation needs when"},{"type":"text","text":" "},{"type":"text","text":"calculating animation values. Keeping the state values in the animation"},{"type":"text","text":" "},{"type":"text","text":"state key makes it more convenient to read and write those values in the"},{"type":"text","text":" "},{"type":"text","text":"implementation of a "},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["private struct PausableState<Value: VectorArithmetic>: AnimationStateKey {","    var paused = false","    var pauseTime: TimeInterval = 0.0","","    static var defaultValue: Self { .init() }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"To make accessing the value of the animation state key more convenient,","type":"text"},{"text":" ","type":"text"},{"text":"define a property for it by extending ","type":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext","isActive":true,"type":"reference"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["extension AnimationContext {","    fileprivate var pausableState: PausableState<Value> {","        get { state[PausableState<Value>.self] }","        set { state[PausableState<Value>.self] = newValue }","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Then, you can read and write your state in an instance of "},{"type":"codeVoice","code":"CustomAnimation"},{"type":"text","text":" "},{"type":"text","text":"using the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["struct PausableAnimation: CustomAnimation {","    let base: Animation","","    func animate<V>(value: V, time: TimeInterval, context: inout AnimationContext<V>) -> V? where V : VectorArithmetic {","        let paused = context.environment.animationPaused","","        let pausableState = context.pausableState","        var pauseTime = pausableState.pauseTime","        if pausableState.paused != paused {","            pauseTime = time - pauseTime","            context.pausableState = PausableState(paused: paused, pauseTime: pauseTime)","        }","","        let effectiveTime = paused ? pauseTime : time - pauseTime","        let result = base.animate(value: value, time: effectiveTime, context: &context)","        return result","    }","}"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openswiftui\/animationstatekey"]}],"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"platforms":[{"unavailable":false,"introducedAt":"13.0","deprecated":false,"beta":false,"name":"iOS"},{"unavailable":false,"introducedAt":"10.15","deprecated":false,"beta":false,"name":"macOS"},{"unavailable":false,"introducedAt":"13.0","deprecated":false,"beta":false,"name":"tvOS"},{"unavailable":false,"introducedAt":"1.0","deprecated":false,"beta":false,"name":"visionOS"},{"unavailable":false,"introducedAt":"6.0","deprecated":false,"beta":false,"name":"watchOS"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationStateKey","kind":"identifier"}],"externalID":"s:15OpenSwiftUICore17AnimationStateKeyP","navigatorTitle":[{"text":"AnimationStateKey","kind":"identifier"}],"symbolKind":"protocol","remoteSource":{"url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Animation\/Animation\/AnimationState.swift#L269","fileName":"AnimationState.swift"},"modules":[{"name":"OpenSwiftUI"}],"role":"symbol","title":"AnimationStateKey","roleHeading":"Protocol"},"abstract":[{"text":"A key for accessing animation state values.","type":"text"}],"topicSections":[{"generated":true,"anchor":"Associated-Types","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey\/Value"],"title":"Associated Types"},{"generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey\/defaultValue"],"title":"Type Properties"}],"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationStateKey/defaultValue":{"kind":"symbol","title":"defaultValue","url":"\/documentation\/openswiftui\/animationstatekey\/defaultvalue","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey\/defaultValue","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"defaultValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore17AnimationStateKeyP5ValueQa"}],"type":"topic","required":true,"abstract":[{"type":"text","text":"The default value for the animation state key."}],"role":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationContext":{"title":"AnimationContext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnimationContext"}],"type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext","abstract":[{"type":"text","text":"Contextual values that a custom animation can use to manage state and"},{"type":"text","text":" "},{"type":"text","text":"access a view’s environment."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimationContext"}],"url":"\/documentation\/openswiftui\/animationcontext","kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/CustomAnimation":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation","role":"symbol","abstract":[{"type":"text","text":"A type that defines how an animatable value changes over time."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomAnimation","kind":"identifier"}],"navigatorTitle":[{"text":"CustomAnimation","kind":"identifier"}],"title":"CustomAnimation","url":"\/documentation\/openswiftui\/customanimation","type":"topic","kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationStateKey/Value":{"kind":"symbol","type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey\/Value","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"title":"Value","abstract":[{"type":"text","text":"The associated type representing the type of the animation state key’s"},{"type":"text","text":" "},{"type":"text","text":"value."}],"url":"\/documentation\/openswiftui\/animationstatekey\/value","role":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationStateKey":{"url":"\/documentation\/openswiftui\/animationstatekey","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationStateKey","kind":"identifier"}],"abstract":[{"text":"A key for accessing animation state values.","type":"text"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey","role":"symbol","title":"AnimationStateKey","navigatorTitle":[{"text":"AnimationStateKey","kind":"identifier"}]}}}