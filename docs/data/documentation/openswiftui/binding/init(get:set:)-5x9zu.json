{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openswiftui\/binding\/init(get:set:)-5x9zu"]}],"kind":"symbol","metadata":{"remoteSource":{"fileName":"Binding.swift","url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Data\/Binding\/Binding.swift#L289"},"platforms":[{"introducedAt":"13.0","unavailable":false,"deprecated":false,"name":"iOS","beta":false},{"introducedAt":"10.15","unavailable":false,"deprecated":false,"name":"macOS","beta":false},{"introducedAt":"13.0","deprecated":false,"unavailable":false,"beta":false,"name":"tvOS"},{"introducedAt":"1.0","deprecated":false,"unavailable":false,"beta":false,"name":"visionOS"},{"introducedAt":"6.0","deprecated":false,"unavailable":false,"beta":false,"name":"watchOS"}],"roleHeading":"Initializer","modules":[{"name":"OpenSwiftUI"}],"symbolKind":"init","externalID":"s:15OpenSwiftUICore7BindingV3get3setACyxGxyc_yxctcfc","title":"init(get:set:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"get","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"set","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}]},"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Binding\/init(get:set:)-5x9zu","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Binding"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"get","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" @isolated(any) () -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"set","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" @isolated(any) (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that retrieves the binding value. The closure has no","type":"text"},{"text":" ","type":"text"},{"text":"parameters, and returns a value.","type":"text"}]}],"name":"get"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that sets the binding value. The closure has the","type":"text"},{"text":" ","type":"text"},{"text":"following parameter:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"newValue: The new value of the binding value.","type":"text"}]}]}]}],"name":"set"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"A binding conforms to Sendable only if its wrapped value type also","type":"text"},{"text":" ","type":"text"},{"text":"conforms to Sendable. It is always safe to pass a sendable binding","type":"text"},{"text":" ","type":"text"},{"text":"between different concurrency domains. However, reading from or writing","type":"text"},{"text":" ","type":"text"},{"text":"to a binding’s wrapped value from a different concurrency domain may or","type":"text"},{"text":" ","type":"text"},{"text":"may not be safe, depending on how the binding was created. OpenSwiftUI will","type":"text"},{"text":" ","type":"text"},{"text":"issue a warning at runtime if it detects a binding being used in a way","type":"text"},{"text":" ","type":"text"},{"text":"that may compromise data safety.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For a “computed” binding created using get and set closure parameters,","type":"text"},{"text":" ","type":"text"},{"text":"the safety of accessing its wrapped value from a different concurrency","type":"text"},{"text":" ","type":"text"},{"text":"domain depends on whether those closure arguments are isolated to","type":"text"},{"text":" ","type":"text"},{"text":"a specific actor. For example, a computed binding with closure arguments","type":"text"},{"text":" ","type":"text"},{"text":"that are known (or inferred) to be isolated to the main actor must only","type":"text"},{"text":" ","type":"text"},{"text":"ever access its wrapped value on the main actor as well, even if the","type":"text"},{"text":" ","type":"text"},{"text":"binding is also sendable.","type":"text"}]}]}],"sections":[],"abstract":[{"text":"Creates a binding with closures that read and write the binding value.","type":"text"}],"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI/Binding/init(get:set:)-5x9zu":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Binding\/init(get:set:)-5x9zu","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Creates a binding with closures that read and write the binding value."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"get","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"set","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"title":"init(get:set:)","url":"\/documentation\/openswiftui\/binding\/init(get:set:)-5x9zu"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Binding":{"abstract":[{"type":"text","text":"A property wrapper type that can read and write a value owned by a source of"},{"type":"text","text":" "},{"type":"text","text":"truth."}],"url":"\/documentation\/openswiftui\/binding","type":"topic","navigatorTitle":[{"text":"Binding","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Binding","title":"Binding","kind":"symbol","role":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"}}}