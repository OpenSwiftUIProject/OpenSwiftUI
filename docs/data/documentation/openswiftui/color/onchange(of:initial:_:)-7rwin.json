{"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Color"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initial"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":" = false, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","preciseIdentifier":"s:15OpenSwiftUICore4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SQ","kind":"typeIdentifier","text":"Equatable"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to check against when determining whether"},{"type":"text","text":" "},{"type":"text","text":"to run the closure."}]}]},{"name":"initial","content":[{"inlineContent":[{"text":"Whether the action should be run when this view initially","type":"text"},{"text":" ","type":"text"},{"text":"appears.","type":"text"}],"type":"paragraph"}]},{"name":"action","content":[{"inlineContent":[{"type":"text","text":"A closure to run when the value changes."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A view that fires an action when the specified value changes."}]}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use "},{"code":"onChange","type":"codeVoice"},{"type":"text","text":" to trigger a side effect as the result of a"},{"type":"text","text":" "},{"type":"text","text":"value changing, such as an "},{"code":"Environment","type":"codeVoice"},{"type":"text","text":" key or a "},{"code":"Binding","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The system may call the action closure on the main actor, so avoid"},{"type":"text","text":" "},{"type":"text","text":"long-running tasks in the closure. If you need to perform such tasks,"},{"type":"text","text":" "},{"type":"text","text":"detach an asynchronous background task."}]},{"type":"paragraph","inlineContent":[{"text":"When the value changes, the new version of the closure will be called,","type":"text"},{"text":" ","type":"text"},{"text":"so any captured values will have their values from the time that the","type":"text"},{"text":" ","type":"text"},{"text":"observed value has its new value. In the following code example,","type":"text"},{"text":" ","type":"text"},{"code":"PlayerView","type":"codeVoice"},{"text":" calls into its model when ","type":"text"},{"code":"playState","type":"codeVoice"},{"text":" changes model.","type":"text"}]},{"type":"codeListing","code":["struct PlayerView: View {","    var episode: Episode","    @State private var playState: PlayState = .paused","","    var body: some View {","        VStack {","            Text(episode.title)","            Text(episode.showTitle)","            PlayButton(playState: $playState)","        }","        .onChange(of: playState) {","            model.playStateDidChange(state: playState)","        }","    }","}"],"syntax":"swift"}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openswiftui\/color\/onchange(of:initial:_:)-7rwin"]}],"metadata":{"modules":[{"name":"OpenSwiftUI","relatedModules":["OpenSwiftUICore"]}],"title":"onChange(of:initial:_:)","role":"symbol","roleHeading":"Instance Method","externalID":"s:15OpenSwiftUICore4ViewPAAE8onChange2of7initial_Qrqd___SbyyctSQRd__lF::SYNTHESIZED::s:15OpenSwiftUICore5ColorV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initial","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore4ViewP","text":"View","kind":"typeIdentifier"}],"remoteSource":{"url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Modifier\/ViewModifier\/ValueActionModifier.swift#L318","fileName":"ValueActionModifier.swift"},"symbolKind":"method","extendedModule":"OpenSwiftUICore","platforms":[{"name":"iOS","deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false},{"name":"macOS","deprecated":false,"beta":false,"introducedAt":"10.15","unavailable":false},{"name":"tvOS","deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false},{"name":"visionOS","deprecated":false,"beta":false,"introducedAt":"1.0","unavailable":false},{"name":"watchOS","deprecated":false,"beta":false,"introducedAt":"6.0","unavailable":false}]},"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Color\/onChange(of:initial:_:)-7rwin","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Adds a modifier for this view that fires an action when a specific"},{"type":"text","text":" "},{"type":"text","text":"value changes."}],"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Color":{"type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Color","abstract":[{"type":"text","text":"A representation of a color that adapts to a given context."}],"url":"\/documentation\/openswiftui\/color","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Color","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"Color","navigatorTitle":[{"text":"Color","kind":"identifier"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Color/onChange(of:initial:_:)-7rwin":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Color\/onChange(of:initial:_:)-7rwin","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initial","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore4ViewP","text":"View","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","role":"symbol","title":"onChange(of:initial:_:)","url":"\/documentation\/openswiftui\/color\/onchange(of:initial:_:)-7rwin","abstract":[{"type":"text","text":"Adds a modifier for this view that fires an action when a specific"},{"type":"text","text":" "},{"type":"text","text":"value changes."}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View":{"url":"\/documentation\/openswiftui\/view","abstract":[{"type":"text","text":"A type that represents part of your appâ€™s user interface and provides"},{"type":"text","text":" "},{"type":"text","text":"modifiers that you use to configure views."}],"role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","title":"View","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"kind":"symbol"}}}