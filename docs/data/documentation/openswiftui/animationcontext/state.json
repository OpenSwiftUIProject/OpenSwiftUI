{"metadata":{"symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnimationState","preciseIdentifier":"s:15OpenSwiftUICore14AnimationStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"remoteSource":{"fileName":"AnimationContext.swift","url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Animation\/Animation\/AnimationContext.swift#L141"},"roleHeading":"Instance Property","modules":[{"name":"OpenSwiftUI"}],"role":"symbol","title":"state","platforms":[{"name":"iOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"13.0"},{"name":"macOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"10.15"},{"name":"tvOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"13.0"},{"name":"visionOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"1.0"},{"name":"watchOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"6.0"}],"externalID":"s:15OpenSwiftUICore16AnimationContextV5stateAA0D5StateVyxGvp"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15OpenSwiftUICore14AnimationStateV","kind":"typeIdentifier","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationState","text":"AnimationState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"An instance of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation"},{"type":"text","text":" uses this property to read and"},{"type":"text","text":" "},{"type":"text","text":"write state values as the animation runs."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"An alternative to using the "},{"type":"codeVoice","code":"state"},{"type":"text","text":" property in a custom animation is"},{"type":"text","text":" "},{"type":"text","text":"to create an "},{"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey","isActive":true},{"type":"text","text":" type and extend "},{"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext","isActive":true},{"type":"text","text":" "},{"type":"text","text":"with a custom property that returns the state as a custom type. For"},{"type":"text","text":" "},{"type":"text","text":"example, the following code creates a state key named "},{"type":"codeVoice","code":"PausableState"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It’s convenient to store state values in the key type, so the"},{"type":"text","text":" "},{"type":"codeVoice","code":"PausableState"},{"type":"text","text":" structure includes properties for the stored state"},{"type":"text","text":" "},{"type":"text","text":"values "},{"type":"codeVoice","code":"paused"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pauseTime"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["private struct PausableState<Value: VectorArithmetic>: AnimationStateKey {","    var paused = false","    var pauseTime: TimeInterval = 0.0","","    static var defaultValue: Self { .init() }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"To provide access the pausable state, the following code extends"},{"type":"text","text":" "},{"type":"codeVoice","code":"AnimationContext"},{"type":"text","text":" to include the "},{"type":"codeVoice","code":"pausableState"},{"type":"text","text":" property. This"},{"type":"text","text":" "},{"type":"text","text":"property returns an instance of the custom "},{"type":"codeVoice","code":"PausableState"},{"type":"text","text":" structure"},{"type":"text","text":" "},{"type":"text","text":"stored in "},{"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/state","isActive":true},{"type":"text","text":", and it can also store a new"},{"type":"text","text":" "},{"type":"codeVoice","code":"PausableState"},{"type":"text","text":" instance in "},{"type":"codeVoice","code":"state"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["extension AnimationContext {","    fileprivate var pausableState: PausableState<Value> {","        get { state[PausableState<Value>.self] }","        set { state[PausableState<Value>.self] = newValue }","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Now a custom animation can use the "},{"code":"pausableState","type":"codeVoice"},{"type":"text","text":" property instead of"},{"type":"text","text":" "},{"type":"text","text":"the "},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/state","isActive":true,"type":"reference"},{"type":"text","text":" property as a convenient way to read and"},{"type":"text","text":" "},{"type":"text","text":"write state values as the animation runs."}],"type":"paragraph"},{"code":["struct PausableAnimation: CustomAnimation {","    func animate<V>(value: V, time: TimeInterval, context: inout AnimationContext<V>) -> V? where V : VectorArithmetic {","        let pausableState = context.pausableState","        var pauseTime = pausableState.pauseTime","        ...","    }","}"],"type":"codeListing","syntax":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/state"},"variants":[{"paths":["\/documentation\/openswiftui\/animationcontext\/state"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"The current state of a custom animation."}],"sections":[],"kind":"symbol","references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI/CustomAnimation":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation","role":"symbol","abstract":[{"type":"text","text":"A type that defines how an animatable value changes over time."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomAnimation","kind":"identifier"}],"navigatorTitle":[{"text":"CustomAnimation","kind":"identifier"}],"title":"CustomAnimation","url":"\/documentation\/openswiftui\/customanimation","type":"topic","kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationStateKey":{"url":"\/documentation\/openswiftui\/animationstatekey","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationStateKey","kind":"identifier"}],"abstract":[{"text":"A key for accessing animation state values.","type":"text"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationStateKey","role":"symbol","title":"AnimationStateKey","navigatorTitle":[{"text":"AnimationStateKey","kind":"identifier"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationState":{"url":"\/documentation\/openswiftui\/animationstate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimationState"}],"abstract":[{"type":"text","text":"A container that stores the state for a custom animation."}],"title":"AnimationState","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationState","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnimationState"}],"type":"topic"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationContext/state":{"role":"symbol","type":"topic","url":"\/documentation\/openswiftui\/animationcontext\/state","title":"state","kind":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/state","abstract":[{"type":"text","text":"The current state of a custom animation."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnimationState","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore14AnimationStateV"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationContext":{"title":"AnimationContext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnimationContext"}],"type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext","abstract":[{"type":"text","text":"Contextual values that a custom animation can use to manage state and"},{"type":"text","text":" "},{"type":"text","text":"access a view’s environment."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimationContext"}],"url":"\/documentation\/openswiftui\/animationcontext","kind":"symbol"}}}