{"sections":[],"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/StrokeShapeView\/task(id:priority:_:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/StrokeShapeView"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"task","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore4ViewP0aB2UIE4task2id8priority_Qrqd___ScPyyYaYbctSQRd__lFQO1Tqd__mfp"},{"text":", ","kind":"text"},{"text":"priority","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TaskPriority","kind":"typeIdentifier","preciseIdentifier":"s:ScP"},{"text":" = .userInitiated, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","preciseIdentifier":"s:15OpenSwiftUICore4ViewP"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"priority","content":[{"type":"paragraph","inlineContent":[{"text":"The task priority to use when creating the asynchronous","type":"text"},{"text":" ","type":"text"},{"text":"task. The default priority is","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/taskpriority\/userinitiated","type":"reference"},{"text":".","type":"text"}]}]},{"name":"action","content":[{"inlineContent":[{"text":"A closure that OpenSwiftUI calls as an asynchronous task","type":"text"},{"text":" ","type":"text"},{"text":"before the view appears. OpenSwiftUI can automatically cancel the task","type":"text"},{"text":" ","type":"text"},{"text":"after the view disappears before the action completes. If the","type":"text"},{"text":" ","type":"text"},{"code":"id","type":"codeVoice"},{"text":" value changes, OpenSwiftUI cancels and restarts the task.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A view that runs the specified action asynchronously before"},{"type":"text","text":" "},{"type":"text","text":"the view appears, or restarts the task when the "},{"type":"codeVoice","code":"id"},{"type":"text","text":" value changes."}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method behaves like "},{"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View\/task(priority:_:)","isActive":true},{"type":"text","text":", except that it also"},{"type":"text","text":" "},{"type":"text","text":"cancels and recreates the task when a specified value changes. To detect"},{"type":"text","text":" "},{"type":"text","text":"a change, the modifier tests whether a new value for the "},{"code":"id","type":"codeVoice"},{"type":"text","text":" parameter"},{"type":"text","text":" "},{"type":"text","text":"equals the previous value. For this to work,"},{"type":"text","text":" "},{"type":"text","text":"the value’s type must conform to the"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/equatable","isActive":true},{"type":"text","text":" protocol."}]},{"type":"paragraph","inlineContent":[{"text":"For example, if you define an equatable ","type":"text"},{"code":"Server","type":"codeVoice"},{"text":" type that posts custom","type":"text"},{"text":" ","type":"text"},{"text":"notifications whenever its state changes — for example, from ","type":"text"},{"inlineContent":[{"text":"signed","type":"text"},{"text":" ","type":"text"},{"text":"out","type":"text"}],"type":"emphasis"},{"text":" to ","type":"text"},{"inlineContent":[{"text":"signed in","type":"text"}],"type":"emphasis"},{"text":" — you can use the task modifier to update","type":"text"},{"text":" ","type":"text"},{"text":"the contents of a ","type":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Text","isActive":true,"type":"reference"},{"text":" view to reflect the state of the","type":"text"},{"text":" ","type":"text"},{"text":"currently selected server:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["Text(status ?? \"Signed Out\")","    .task(id: server) {","        let sequence = NotificationCenter.default.notifications(","            named: .didUpdateStatus,","            object: server","        ).compactMap {","            $0.userInfo?[\"status\"] as? String","        }","        for await value in sequence {","            status = value","        }","    }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example uses the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/notificationcenter\/3813137-notifications"},{"type":"text","text":" "},{"type":"text","text":"method to create an asynchronous sequence of notifications, given by an"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncsequence"},{"type":"text","text":" "},{"type":"text","text":"instance. The example then maps the notification sequence to a sequence"},{"type":"text","text":" "},{"type":"text","text":"of strings that correspond to values stored with each notification."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Elsewhere, the server defines a custom "},{"type":"codeVoice","code":"didUpdateStatus"},{"type":"text","text":" notification:"}]},{"type":"codeListing","syntax":"swift","code":["extension NSNotification.Name {","    static var didUpdateStatus: NSNotification.Name {","        NSNotification.Name(\"didUpdateStatus\")","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"Whenever the server status changes, like after the user signs in, the","type":"text"},{"text":" ","type":"text"},{"text":"server posts a notification of this custom type:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let notification = Notification(","    name: .didUpdateStatus,","    object: self,","    userInfo: [\"status\": \"Signed In\"])","NotificationCenter.default.post(notification)"]},{"type":"paragraph","inlineContent":[{"text":"The task attached to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Text"},{"text":" view gets and displays the status","type":"text"},{"text":" ","type":"text"},{"text":"value from the notification’s user information dictionary. When the user","type":"text"},{"text":" ","type":"text"},{"text":"chooses a different server, OpenSwiftUI cancels the task and creates a new","type":"text"},{"text":" ","type":"text"},{"text":"one, which then waits for notifications from the new server.","type":"text"}]}],"kind":"content"}],"metadata":{"extendedModule":"OpenSwiftUICore","remoteSource":{"fileName":"TaskModifier.swift","url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUI\/Modifier\/ViewModifier\/TaskModifier.swift#L147"},"modules":[{"name":"OpenSwiftUI","relatedModules":["OpenSwiftUICore"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"task","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore4ViewP0aB2UIE4task2id8priority_Qrqd___ScPyyYaYbctSQRd__lFQO1Tqd__mfp"},{"text":", ","kind":"text"},{"text":"priority","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TaskPriority","kind":"typeIdentifier","preciseIdentifier":"s:ScP"},{"text":", () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore4ViewP"}],"symbolKind":"method","roleHeading":"Instance Method","title":"task(id:priority:_:)","role":"symbol","externalID":"s:15OpenSwiftUICore4ViewP0aB2UIE4task2id8priority_Qrqd___ScPyyYaYbctSQRd__lF::SYNTHESIZED::s:15OpenSwiftUICore15StrokeShapeViewV","platforms":[{"name":"iOS","deprecated":false,"introducedAt":"13.0","unavailable":false,"beta":false},{"name":"macOS","deprecated":false,"introducedAt":"10.15","unavailable":false,"beta":false},{"name":"tvOS","deprecated":false,"introducedAt":"13.0","unavailable":false,"beta":false},{"name":"visionOS","deprecated":false,"introducedAt":"1.0","unavailable":false,"beta":false},{"name":"watchOS","deprecated":false,"introducedAt":"6.0","unavailable":false,"beta":false}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openswiftui\/strokeshapeview\/task(id:priority:_:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Adds a task to perform before this view appears or when a specified","type":"text"},{"text":" ","type":"text"},{"text":"value changes.","type":"text"}],"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI/Text":{"abstract":[],"role":"symbol","navigatorTitle":[{"text":"Text","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Text","kind":"identifier"}],"url":"\/documentation\/openswiftui\/text","kind":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Text","title":"Text"},"https://developer.apple.com/documentation/swift/taskpriority/userinitiated":{"url":"https:\/\/developer.apple.com\/documentation\/swift\/taskpriority\/userinitiated","title":"userInitiated","type":"link","titleInlineContent":[{"type":"text","text":"userInitiated"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/taskpriority\/userinitiated"},"https://developer.apple.com/documentation/foundation/notificationcenter/3813137-notifications":{"type":"link","title":"notifications(named:object:)","titleInlineContent":[{"text":"notifications(named:object:)","type":"text"}],"identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/notificationcenter\/3813137-notifications","url":"https:\/\/developer.apple.com\/documentation\/foundation\/notificationcenter\/3813137-notifications"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View/task(priority:_:)":{"title":"task(priority:_:)","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View\/task(priority:_:)","abstract":[{"type":"text","text":"Adds an asynchronous task to perform before this view appears."}],"kind":"symbol","url":"\/documentation\/openswiftui\/view\/task(priority:_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"task"},{"kind":"text","text":"("},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","text":", () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:15OpenSwiftUICore4ViewP"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/StrokeShapeView":{"navigatorTitle":[{"text":"StrokeShapeView","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/StrokeShapeView","kind":"symbol","type":"topic","title":"StrokeShapeView","url":"\/documentation\/openswiftui\/strokeshapeview","abstract":[{"text":"A shape provider that strokes its shape.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StrokeShapeView","kind":"identifier"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"https://developer.apple.com/documentation/swift/equatable":{"url":"https:\/\/developer.apple.com\/documentation\/swift\/equatable","titleInlineContent":[{"text":"Equatable","type":"text"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/equatable","type":"link","title":"Equatable"},"https://developer.apple.com/documentation/swift/asyncsequence":{"url":"https:\/\/developer.apple.com\/documentation\/swift\/asyncsequence","title":"AsyncSequence","type":"link","titleInlineContent":[{"type":"text","text":"AsyncSequence"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncsequence"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/StrokeShapeView/task(id:priority:_:)":{"abstract":[{"text":"Adds a task to perform before this view appears or when a specified","type":"text"},{"text":" ","type":"text"},{"text":"value changes.","type":"text"}],"title":"task(id:priority:_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/StrokeShapeView\/task(id:priority:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"task","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","preciseIdentifier":"s:15OpenSwiftUICore4ViewP0aB2UIE4task2id8priority_Qrqd___ScPyyYaYbctSQRd__lFQO1Tqd__mfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"priority","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TaskPriority","preciseIdentifier":"s:ScP","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:15OpenSwiftUICore4ViewP","kind":"typeIdentifier"}],"url":"\/documentation\/openswiftui\/strokeshapeview\/task(id:priority:_:)","type":"topic"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View":{"url":"\/documentation\/openswiftui\/view","abstract":[{"type":"text","text":"A type that represents part of your app’s user interface and provides"},{"type":"text","text":" "},{"type":"text","text":"modifiers that you use to configure views."}],"role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","title":"View","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"kind":"symbol"}}}