{"variants":[{"paths":["\/documentation\/openswiftui\/geometryreader\/frame(width:height:alignment:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Positions this view within an invisible frame with the specified size."}],"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/GeometryReader"]]},"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/GeometryReader\/frame(width:height:alignment:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"frame","kind":"identifier"},{"text":"(","kind":"text"},{"text":"width","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"height","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"alignment","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Alignment","preciseIdentifier":"s:15OpenSwiftUICore9AlignmentV","kind":"typeIdentifier","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Alignment"},{"text":" = .center) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:15OpenSwiftUICore4ViewP","kind":"typeIdentifier","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View"},{"text":"\n","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A fixed width for the resulting view. If ","type":"text"},{"code":"width","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"the resulting view assumes this view’s sizing behavior.","type":"text"}]}],"name":"width"},{"content":[{"inlineContent":[{"type":"text","text":"A fixed height for the resulting view. If "},{"type":"codeVoice","code":"height"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"the resulting view assumes this view’s sizing behavior."}],"type":"paragraph"}],"name":"height"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The alignment of this view inside the resulting frame.","type":"text"},{"text":" ","type":"text"},{"text":"Note that most alignment values have no apparent effect when the","type":"text"},{"text":" ","type":"text"},{"text":"size of the frame happens to match that of this view.","type":"text"}]}],"name":"alignment"}]},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A view with fixed dimensions of "},{"type":"codeVoice","code":"width"},{"type":"text","text":" and "},{"type":"codeVoice","code":"height"},{"type":"text","text":", for the"},{"type":"text","text":" "},{"type":"text","text":"parameters that are non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"Use this method to specify a fixed size for a view’s width, height, or","type":"text"},{"text":" ","type":"text"},{"text":"both. If you only specify one of the dimensions, the resulting view","type":"text"},{"text":" ","type":"text"},{"text":"assumes this view’s sizing behavior in the other dimension.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, the following code lays out an ellipse in a fixed 200 by","type":"text"},{"text":" ","type":"text"},{"text":"100 frame. Because a shape always occupies the space offered to it by","type":"text"},{"text":" ","type":"text"},{"text":"the layout system, the first ellipse is 200x100 points. The second","type":"text"},{"text":" ","type":"text"},{"text":"ellipse is laid out in a frame with only a fixed height, so it occupies","type":"text"},{"text":" ","type":"text"},{"text":"that height, and whatever width the layout system offers to its parent.","type":"text"}],"type":"paragraph"},{"code":["VStack {","    Ellipse()","        .fill(Color.purple)","        .frame(width: 200, height: 100)","    Ellipse()","        .fill(Color.blue)","        .frame(height: 100)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[],"type":"paragraph"},{"inlineContent":[{"code":"The alignment","type":"codeVoice"},{"text":" parameter specifies this view’s alignment within the","type":"text"},{"text":" ","type":"text"},{"text":"frame.","type":"text"}],"type":"paragraph"},{"code":["Text(\"Hello world!\")","    .frame(width: 200, height: 30, alignment: .topLeading)","    .border(Color.gray)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"In the example above, the text is positioned at the top, leading corner"},{"type":"text","text":" "},{"type":"text","text":"of the frame. If the text is taller than the frame, its bounds may"},{"type":"text","text":" "},{"type":"text","text":"extend beyond the bottom of the frame’s bounds."}],"type":"paragraph"},{"inlineContent":[],"type":"paragraph"}],"kind":"content"}],"metadata":{"remoteSource":{"fileName":"FrameLayout.swift","url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Layout\/Modifier\/FrameLayout.swift#L167"},"extendedModule":"OpenSwiftUICore","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"frame","kind":"identifier"},{"text":"(","kind":"text"},{"text":"width","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"height","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"alignment","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore9AlignmentV","text":"Alignment","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore4ViewP","text":"View","kind":"typeIdentifier"}],"role":"symbol","modules":[{"name":"OpenSwiftUI","relatedModules":["OpenSwiftUICore"]}],"title":"frame(width:height:alignment:)","externalID":"s:15OpenSwiftUICore4ViewPAAE5frame5width6height9alignmentQr14CoreFoundation7CGFloatVSg_AkA9AlignmentVtF::SYNTHESIZED::s:15OpenSwiftUICore14GeometryReaderV","roleHeading":"Instance Method","platforms":[{"introducedAt":"13.0","deprecated":false,"beta":false,"name":"iOS","unavailable":false},{"introducedAt":"10.15","deprecated":false,"beta":false,"name":"macOS","unavailable":false},{"introducedAt":"13.0","deprecated":false,"beta":false,"name":"tvOS","unavailable":false},{"introducedAt":"1.0","deprecated":false,"beta":false,"name":"visionOS","unavailable":false},{"introducedAt":"6.0","deprecated":false,"beta":false,"name":"watchOS","unavailable":false}]},"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Alignment":{"title":"Alignment","type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Alignment","url":"\/documentation\/openswiftui\/alignment","abstract":[{"type":"text","text":"An alignment in both axes."}],"navigatorTitle":[{"kind":"identifier","text":"Alignment"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Alignment"}],"kind":"symbol","role":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/GeometryReader/frame(width:height:alignment:)":{"kind":"symbol","url":"\/documentation\/openswiftui\/geometryreader\/frame(width:height:alignment:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"frame","kind":"identifier"},{"text":"(","kind":"text"},{"text":"width","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"height","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14CoreFoundation7CGFloatV","text":"CGFloat","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"alignment","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore9AlignmentV","text":"Alignment","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:15OpenSwiftUICore4ViewP","text":"View","kind":"typeIdentifier"}],"abstract":[{"text":"Positions this view within an invisible frame with the specified size.","type":"text"}],"role":"symbol","type":"topic","title":"frame(width:height:alignment:)","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/GeometryReader\/frame(width:height:alignment:)"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View":{"url":"\/documentation\/openswiftui\/view","abstract":[{"type":"text","text":"A type that represents part of your app’s user interface and provides"},{"type":"text","text":" "},{"type":"text","text":"modifiers that you use to configure views."}],"role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","title":"View","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/GeometryReader":{"title":"GeometryReader","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GeometryReader"}],"type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/GeometryReader","url":"\/documentation\/openswiftui\/geometryreader","abstract":[{"type":"text","text":"A container view that defines its content as a function of its own size and"},{"type":"text","text":" "},{"type":"text","text":"coordinate space."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GeometryReader"}]}}}