{"sections":[],"topicSections":[{"anchor":"Creating-an-observed-object","title":"Creating an observed object","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject\/init(wrappedValue:)","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject\/init(initialValue:)"]},{"anchor":"Getting-the-value","title":"Getting the value","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject\/wrappedValue","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject\/projectedValue","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject\/Wrapper"]},{"generated":true,"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject\/DynamicProperty-Implementations"]}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/DynamicProperty","doc:\/\/OpenSwiftUI\/s8SendableP"]}],"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI"]]},"abstract":[{"type":"text","text":"A property wrapper type that subscribes to an observable object and"},{"type":"text","text":" "},{"type":"text","text":"invalidates a view whenever the observable object changes."}],"seeAlsoSections":[{"generated":true,"anchor":"Creating-model-data","title":"Creating model data","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/managing-model-data-in-your-app","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/StateObject"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"@frozen","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservedObject","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ObjectType","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObjectType","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"ObservableObject","kind":"typeIdentifier","preciseIdentifier":"s:7Combine16ObservableObjectP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"text":"Add the ","type":"text"},{"code":"@ObservedObject","type":"codeVoice"},{"text":" attribute to a parameter of an OpenSwiftUI ","type":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"when the input is an","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/opencombine\/main\/documentation\/opencombine\/observableobject","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"and you want the view to update when the object’s published properties","type":"text"},{"text":" ","type":"text"},{"text":"change. You typically do this to pass a ","type":"text"},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/StateObject","isActive":true,"type":"reference"},{"text":" into a subview.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The following example defines a data model as an observable object,"},{"type":"text","text":" "},{"type":"text","text":"instantiates the model in a view as a state object, and then passes"},{"type":"text","text":" "},{"type":"text","text":"the instance to a subview as an observed object:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["class DataModel: ObservableObject {","    @Published var name = \"Some Name\"","    @Published var isEnabled = false","}","","struct MyView: View {","    @StateObject private var model = DataModel()","","    var body: some View {","        Text(model.name)","        MySubView(model: model)","    }","}","","struct MySubView: View {","    @ObservedObject var model: DataModel","","    var body: some View {","        Toggle(\"Enabled\", isOn: $model.isEnabled)","    }","}"]},{"inlineContent":[{"type":"text","text":"When any published property of the observable object changes, OpenSwiftUI"},{"type":"text","text":" "},{"type":"text","text":"updates any view that depends on the object. Subviews can"},{"type":"text","text":" "},{"type":"text","text":"also make updates to the model properties, like the "},{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Toggle","type":"reference","isActive":true},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"above example, that propagate to other observers throughout the view"},{"type":"text","text":" "},{"type":"text","text":"hierarchy."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Don’t specify a default or initial value for the observed object. Use the"},{"type":"text","text":" "},{"type":"text","text":"attribute only for a property that acts as an input for a view, as in the"},{"type":"text","text":" "},{"type":"text","text":"above example."}],"type":"paragraph"},{"style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Don’t wrap objects conforming to the"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/openobservation\/main\/documentation\/openobservation\/observable","isActive":true},{"type":"text","text":" "},{"type":"text","text":"protocol with "},{"type":"codeVoice","code":"@ObservedObject"},{"type":"text","text":". OpenSwiftUI automatically tracks dependencies"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":" objects used within body and updates dependent views when"},{"type":"text","text":" "},{"type":"text","text":"their data changes. Attempting to wrap an "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":" object with"},{"type":"text","text":" "},{"type":"codeVoice","code":"@ObservedObject"},{"type":"text","text":" may cause a compiler error, because it requires that its"},{"type":"text","text":" "},{"type":"text","text":"wrapped object to conform to the"},{"type":"text","text":" "},{"identifier":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/opencombine\/main\/documentation\/opencombine\/observableobject","isActive":true,"overridingTitleInlineContent":[{"text":"ObservableObject","type":"text"}],"type":"reference","overridingTitle":"ObservableObject"},{"type":"text","text":" "},{"type":"text","text":"protocol."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the view needs a binding to a property of an "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":" object in"},{"type":"text","text":" "},{"type":"text","text":"its body, wrap the object with the "},{"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable","isActive":true},{"type":"text","text":" property wrapper instead;"},{"type":"text","text":" "},{"type":"text","text":"for example, "},{"type":"codeVoice","code":"@Bindable var model: DataModel"},{"type":"text","text":". For more information, see"},{"type":"text","text":" "},{"type":"text","text":"doc:Managing-model-data-in-your-app"},{"type":"text","text":"."}]}],"type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openswiftui\/observedobject"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject"},"metadata":{"symbolKind":"struct","externalID":"s:15OpenSwiftUICore14ObservedObjectV","modules":[{"name":"OpenSwiftUI"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservedObject"}],"platforms":[{"beta":false,"deprecated":false,"name":"iOS","unavailable":false,"introducedAt":"13.0"},{"beta":false,"deprecated":false,"name":"macOS","unavailable":false,"introducedAt":"10.15"},{"beta":false,"deprecated":false,"name":"tvOS","unavailable":false,"introducedAt":"13.0"},{"beta":false,"deprecated":false,"name":"visionOS","unavailable":false,"introducedAt":"1.0"},{"beta":false,"deprecated":false,"name":"watchOS","unavailable":false,"introducedAt":"6.0"}],"remoteSource":{"fileName":"ObservedObject.swift","url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Data\/Combine\/ObservedObject.swift#L82"},"navigatorTitle":[{"kind":"identifier","text":"ObservedObject"}],"title":"ObservedObject","roleHeading":"Structure"},"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ObservedObject":{"role":"symbol","navigatorTitle":[{"text":"ObservedObject","kind":"identifier"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject","title":"ObservedObject","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservedObject","kind":"identifier"}],"url":"\/documentation\/openswiftui\/observedobject","abstract":[{"type":"text","text":"A property wrapper type that subscribes to an observable object and"},{"type":"text","text":" "},{"type":"text","text":"invalidates a view whenever the observable object changes."}],"type":"topic","kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Toggle":{"title":"Toggle","kind":"symbol","navigatorTitle":[{"text":"Toggle","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Toggle","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Toggle","url":"\/documentation\/openswiftui\/toggle"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View":{"url":"\/documentation\/openswiftui\/view","abstract":[{"type":"text","text":"A type that represents part of your app’s user interface and provides"},{"type":"text","text":" "},{"type":"text","text":"modifiers that you use to configure views."}],"role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","title":"View","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ObservedObject/DynamicProperty-Implementations":{"url":"\/documentation\/openswiftui\/observedobject\/dynamicproperty-implementations","title":"DynamicProperty Implementations","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject\/DynamicProperty-Implementations","abstract":[],"role":"collectionGroup","kind":"article","type":"topic"},"https://swiftpackageindex.com/openswiftuiproject/openobservation/main/documentation/openobservation/observable":{"identifier":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/openobservation\/main\/documentation\/openobservation\/observable","titleInlineContent":[{"type":"text","text":"Observable"}],"type":"link","url":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/openobservation\/main\/documentation\/openobservation\/observable","title":"Observable"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ObservedObject/init(wrappedValue:)":{"kind":"symbol","abstract":[{"type":"text","text":"Creates an observed object with an initial wrapped value."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject\/init(wrappedValue:)","role":"symbol","title":"init(wrappedValue:)","url":"\/documentation\/openswiftui\/observedobject\/init(wrappedvalue:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ObjectType","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/DynamicProperty":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/DynamicProperty","title":"DynamicProperty","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/openswiftui\/dynamicproperty","navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"abstract":[{"type":"text","text":"An interface for a stored variable that updates an external property of a"},{"type":"text","text":" "},{"type":"text","text":"view."}]},"https://swiftpackageindex.com/openswiftuiproject/opencombine/main/documentation/opencombine/observableobject":{"identifier":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/opencombine\/main\/documentation\/opencombine\/observableobject","type":"link","title":"ObservableObject","titleInlineContent":[{"text":"ObservableObject","type":"text"}],"url":"https:\/\/swiftpackageindex.com\/openswiftuiproject\/opencombine\/main\/documentation\/opencombine\/observableobject"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ObservedObject/projectedValue":{"url":"\/documentation\/openswiftui\/observedobject\/projectedvalue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ObservedObject","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore14ObservedObjectV"},{"text":"<","kind":"text"},{"text":"ObjectType","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Wrapper","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore14ObservedObjectV7WrapperV"}],"type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject\/projectedValue","role":"symbol","title":"projectedValue","abstract":[{"text":"A projection of the observed object that creates bindings to its","type":"text"},{"text":" ","type":"text"},{"text":"properties.","type":"text"}],"kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ObservedObject/init(initialValue:)":{"kind":"symbol","abstract":[{"text":"Creates an observed object with an initial value.","type":"text"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject\/init(initialValue:)","role":"symbol","title":"init(initialValue:)","url":"\/documentation\/openswiftui\/observedobject\/init(initialvalue:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ObjectType","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://OpenSwiftUI/s8SendableP":{"identifier":"doc:\/\/OpenSwiftUI\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ObservedObject/Wrapper":{"url":"\/documentation\/openswiftui\/observedobject\/wrapper","kind":"symbol","title":"ObservedObject.Wrapper","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject\/Wrapper","abstract":[{"text":"A wrapper of the underlying observable object that can create bindings","type":"text"},{"text":" ","type":"text"},{"text":"to its properties.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Wrapper","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapper","kind":"identifier"}],"type":"topic"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/managing-model-data-in-your-app":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/managing-model-data-in-your-app","title":"Managing model data in your app","kind":"article","type":"topic","abstract":[{"type":"text","text":"Create connections between your app’s data model and views."}],"url":"\/documentation\/openswiftui\/managing-model-data-in-your-app","role":"article"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Bindable":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Bindable","title":"Bindable","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bindable"}],"role":"symbol","kind":"symbol","url":"\/documentation\/openswiftui\/bindable","navigatorTitle":[{"kind":"identifier","text":"Bindable"}],"abstract":[{"type":"text","text":"A property wrapper type that supports creating bindings to the mutable"},{"type":"text","text":" "},{"type":"text","text":"properties of observable objects."}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ObservedObject/wrappedValue":{"type":"topic","kind":"symbol","title":"wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ObjectType","kind":"typeIdentifier"}],"url":"\/documentation\/openswiftui\/observedobject\/wrappedvalue","role":"symbol","abstract":[{"type":"text","text":"The underlying value that the observed object references."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ObservedObject\/wrappedValue"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/StateObject":{"role":"symbol","navigatorTitle":[{"text":"StateObject","kind":"identifier"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/StateObject","title":"StateObject","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateObject","kind":"identifier"}],"url":"\/documentation\/openswiftui\/stateobject","abstract":[{"type":"text","text":"A property wrapper type that instantiates an observable object."}],"type":"topic","kind":"symbol"}}}