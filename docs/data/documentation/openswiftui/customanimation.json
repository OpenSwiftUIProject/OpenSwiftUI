{"sections":[],"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI"]]},"abstract":[{"type":"text","text":"A type that defines how an animatable value changes over time."}],"topicSections":[{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation\/animate(value:time:context:)","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation\/shouldMerge(previous:value:time:context:)","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation\/velocity(value:time:context:)"],"generated":true}],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/OpenSwiftUI\/SQ","doc:\/\/OpenSwiftUI\/SH","doc:\/\/OpenSwiftUI\/s8SendableP"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomAnimation","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"text":"Use this protocol to create a type that changes an animatable value over","type":"text"},{"text":" ","type":"text"},{"text":"time, which produces a custom visual transition of a view. For example, the","type":"text"},{"text":" ","type":"text"},{"text":"follow code changes an animatable value using an elastic ease-in ease-out","type":"text"},{"text":" ","type":"text"},{"text":"function:","type":"text"}],"type":"paragraph"},{"code":["struct ElasticEaseInEaseOutAnimation: CustomAnimation {","    let duration: TimeInterval","","    func animate<V>(value: V, time: TimeInterval, context: inout AnimationContext<V>) -> V? where V : VectorArithmetic {","        if time > duration { return nil } \/\/ The animation has finished.","","        let p = time \/ duration","        let s = sin((20 * p - 11.125) * ((2 * Double.pi) \/ 4.5))","        if p < 0.5 {","            return value.scaled(by: -(pow(2, 20 * p - 10) * s) \/ 2)","        } else {","            return value.scaled(by: (pow(2, -20 * p + 10) * s) \/ 2 + 1)","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To maintain state during the life span of a custom animation, use"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/state"},{"type":"text","text":" property available on the "},{"type":"codeVoice","code":"context"},{"type":"text","text":" "},{"type":"text","text":"parameter value. You can also use contextâ€™s"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/environment"},{"type":"text","text":" property to retrieve environment values"},{"type":"text","text":" "},{"type":"text","text":"from the view that created the custom animation. For more information, see"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext"},{"type":"text","text":"."}]}],"style":"note","name":"Note","type":"aside"},{"inlineContent":[{"text":"To create an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Animation","type":"reference"},{"text":" instance of a custom animation, use the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Animation\/init(_:)","type":"reference"},{"text":" initializer, passing in an instance of a custom","type":"text"},{"text":" ","type":"text"},{"text":"animation; for example:","type":"text"}],"type":"paragraph"},{"code":["Animation(ElasticEaseInEaseOutAnimation(duration: 5.0))"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"To help make view code more readable, extend "},{"type":"reference","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Animation","isActive":true},{"type":"text","text":" and add a static"},{"type":"text","text":" "},{"type":"text","text":"property and function that returns an "},{"type":"codeVoice","code":"Animation"},{"type":"text","text":" instance of a custom"},{"type":"text","text":" "},{"type":"text","text":"animation. For example, the following code adds the static property"},{"type":"text","text":" "},{"type":"codeVoice","code":"elasticEaseInEaseOut"},{"type":"text","text":" that returns the elastic ease-in ease-out animation"},{"type":"text","text":" "},{"type":"text","text":"with a default duration of "},{"type":"codeVoice","code":"0.35"},{"type":"text","text":" seconds. Next, the code adds a method"},{"type":"text","text":" "},{"type":"text","text":"that returns the animation with a specified duration."}],"type":"paragraph"},{"code":["extension Animation {","    static var elasticEaseInEaseOut: Animation { elasticEaseInEaseOut(duration: 0.35) }","    static func elasticEaseInEaseOut(duration: TimeInterval) -> Animation {","        Animation(ElasticEaseInEaseOutAnimation(duration: duration))","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"To animate a view with the elastic ease-in ease-out animation, a view calls"},{"type":"text","text":" "},{"type":"text","text":"either "},{"type":"codeVoice","code":".elasticEaseInEaseOut"},{"type":"text","text":" or "},{"type":"codeVoice","code":".elasticEaseInEaseOut(duration:)"},{"type":"text","text":". For"},{"type":"text","text":" "},{"type":"text","text":"example, the follow code includes an Animate button that, when clicked,"},{"type":"text","text":" "},{"type":"text","text":"animates a circle as it moves from one edge of the view to the other,"},{"type":"text","text":" "},{"type":"text","text":"using the elastic ease-in ease-out animation with a duration of "},{"type":"codeVoice","code":"5"},{"type":"text","text":" "},{"type":"text","text":"seconds:"}],"type":"paragraph"},{"code":["struct ElasticEaseInEaseOutView: View {","    @State private var isActive = false","","    var body: some View {","        VStack(alignment: isActive ? .trailing : .leading) {","            Circle()","                .frame(width: 100.0)","                .foregroundColor(.accentColor)","","            Button(\"Animate\") {","                withAnimation(.elasticEaseInEaseOut(duration: 5.0)) {","                    isActive.toggle()","                }","            }","            .frame(maxWidth: .infinity)","        }","        .padding()","    }","}"],"type":"codeListing","syntax":"swift"}]}],"kind":"symbol","metadata":{"remoteSource":{"fileName":"CustomAnimation.swift","url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Animation\/Animation\/CustomAnimation.swift#L90"},"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomAnimation","kind":"identifier"}],"role":"symbol","roleHeading":"Protocol","navigatorTitle":[{"text":"CustomAnimation","kind":"identifier"}],"symbolKind":"protocol","modules":[{"name":"OpenSwiftUI"}],"platforms":[{"name":"iOS","deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false},{"name":"macOS","deprecated":false,"beta":false,"introducedAt":"10.15","unavailable":false},{"name":"tvOS","deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false},{"name":"visionOS","deprecated":false,"beta":false,"introducedAt":"1.0","unavailable":false},{"name":"watchOS","deprecated":false,"beta":false,"introducedAt":"6.0","unavailable":false}],"title":"CustomAnimation","externalID":"s:15OpenSwiftUICore15CustomAnimationP"},"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/openswiftui\/customanimation"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://OpenSwiftUI/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/OpenSwiftUI\/s8SendableP"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/CustomAnimation/velocity(value:time:context:)":{"abstract":[{"type":"text","text":"Calculates the velocity of the animation at a specified time."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"velocity"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"time"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnimationContext","preciseIdentifier":"s:15OpenSwiftUICore16AnimationContextV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":"?"}],"required":true,"role":"symbol","url":"\/documentation\/openswiftui\/customanimation\/velocity(value:time:context:)","defaultImplementations":1,"kind":"symbol","title":"velocity(value:time:context:)","type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation\/velocity(value:time:context:)"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Animation/init(_:)":{"url":"\/documentation\/openswiftui\/animation\/init(_:)","role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Animation\/init(_:)","type":"topic","kind":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"Animation"},{"type":"text","text":" that contains the specified custom animation."}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/CustomAnimation":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation","role":"symbol","abstract":[{"type":"text","text":"A type that defines how an animatable value changes over time."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CustomAnimation","kind":"identifier"}],"navigatorTitle":[{"text":"CustomAnimation","kind":"identifier"}],"title":"CustomAnimation","url":"\/documentation\/openswiftui\/customanimation","type":"topic","kind":"symbol"},"doc://OpenSwiftUI/SQ":{"type":"unresolvable","identifier":"doc:\/\/OpenSwiftUI\/SQ","title":"Swift.Equatable"},"doc://OpenSwiftUI/SH":{"identifier":"doc:\/\/OpenSwiftUI\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationContext/state":{"role":"symbol","type":"topic","url":"\/documentation\/openswiftui\/animationcontext\/state","title":"state","kind":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/state","abstract":[{"type":"text","text":"The current state of a custom animation."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnimationState","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore14AnimationStateV"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/CustomAnimation/animate(value:time:context:)":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation\/animate(value:time:context:)","role":"symbol","abstract":[{"type":"text","text":"Calculates the value of the animation at the specified time."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"animate","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"time","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationContext","preciseIdentifier":"s:15OpenSwiftUICore16AnimationContextV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"animate(value:time:context:)","required":true,"url":"\/documentation\/openswiftui\/customanimation\/animate(value:time:context:)","type":"topic","kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/CustomAnimation/shouldMerge(previous:value:time:context:)":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/CustomAnimation\/shouldMerge(previous:value:time:context:)","role":"symbol","abstract":[{"type":"text","text":"Determines whether an instance of the animation can merge with other"},{"type":"text","text":" "},{"type":"text","text":"instance of the same type."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shouldMerge"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"previous"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore9AnimationV","text":"Animation"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"time"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval","text":"TimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore16AnimationContextV","text":"AnimationContext"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"shouldMerge(previous:value:time:context:)","defaultImplementations":1,"required":true,"url":"\/documentation\/openswiftui\/customanimation\/shouldmerge(previous:value:time:context:)","type":"topic","kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Animation":{"kind":"symbol","type":"topic","url":"\/documentation\/openswiftui\/animation","abstract":[{"text":"The way a view changes over time to create a smooth visual transition from","type":"text"},{"text":" ","type":"text"},{"text":"one state to another.","type":"text"}],"role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Animation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Animation"}],"navigatorTitle":[{"kind":"identifier","text":"Animation"}],"title":"Animation"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationContext/environment":{"url":"\/documentation\/openswiftui\/animationcontext\/environment","role":"symbol","title":"environment","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"environment","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EnvironmentValues","kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore17EnvironmentValuesV"}],"type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext\/environment","abstract":[{"type":"text","text":"The current environment of the view that created the custom animation."}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/AnimationContext":{"title":"AnimationContext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnimationContext"}],"type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/AnimationContext","abstract":[{"type":"text","text":"Contextual values that a custom animation can use to manage state and"},{"type":"text","text":" "},{"type":"text","text":"access a viewâ€™s environment."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimationContext"}],"url":"\/documentation\/openswiftui\/animationcontext","kind":"symbol"}}}