{"variants":[{"paths":["\/documentation\/openswiftui\/fillshapeview\/onchange(of:perform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Performs an action when a specified value changes.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/FillShapeView"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","preciseIdentifier":"s:15OpenSwiftUICore4ViewP","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"inlineContent":[{"text":"The value to check when determining whether to run the","type":"text"},{"text":" ","type":"text"},{"text":"closure. The value must conform to the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/equatable"},{"text":" ","type":"text"},{"text":"protocol.","type":"text"}],"type":"paragraph"}]},{"name":"action","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure to run when the value changes. The closure"},{"type":"text","text":" "},{"type":"text","text":"takes a "},{"type":"codeVoice","code":"newValue"},{"type":"text","text":" parameter that indicates the updated"},{"type":"text","text":" "},{"type":"text","text":"value."}]}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A view that runs an action when the specified value changes."}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"Use this modifier to run a closure when a value like","type":"text"},{"text":" ","type":"text"},{"text":"an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment","type":"reference"},{"text":" value or a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Binding","type":"reference"},{"text":" changes.","type":"text"},{"text":" ","type":"text"},{"text":"For example, you can clear a cache when you notice","type":"text"},{"text":" ","type":"text"},{"text":"that the view’s scene moves to the background:","type":"text"}],"type":"paragraph"},{"code":["struct ContentView: View {","    @Environment(\\.scenePhase) private var scenePhase","    @StateObject private var cache = DataCache()","","    var body: some View {","        MyView()","            .onChange(of: scenePhase) { newScenePhase in","                if newScenePhase == .background {","                    cache.empty()","                }","            }","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"OpenSwiftUI passes the new value into the closure. You can also capture the"},{"type":"text","text":" "},{"type":"text","text":"previous value to compare it to the new value. For example, in"},{"type":"text","text":" "},{"type":"text","text":"the following code example, "},{"type":"codeVoice","code":"PlayerView"},{"type":"text","text":" passes both the old and new"},{"type":"text","text":" "},{"type":"text","text":"values to the model."}],"type":"paragraph"},{"code":["struct PlayerView: View {","    var episode: Episode","    @State private var playState: PlayState = .paused","","    var body: some View {","        VStack {","            Text(episode.title)","            Text(episode.showTitle)","            PlayButton(playState: $playState)","        }","        .onChange(of: playState) { [playState] newState in","            model.playStateDidChange(from: playState, to: newState)","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"The system may call the action closure on the main actor, so avoid"},{"type":"text","text":" "},{"type":"text","text":"long-running tasks in the closure. If you need to perform such tasks,"},{"type":"text","text":" "},{"type":"text","text":"detach an asynchronous background task."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Important: This modifier is deprecated and has been replaced with new"},{"type":"text","text":" "},{"type":"text","text":"versions that include either zero or two parameters within the closure,"},{"type":"text","text":" "},{"type":"text","text":"unlike this version that includes one parameter. This deprecated version"},{"type":"text","text":" "},{"type":"text","text":"and the new versions behave differently with respect to how they execute"},{"type":"text","text":" "},{"type":"text","text":"the action closure, specifically when the closure captures other values."},{"type":"text","text":" "},{"type":"text","text":"Using the deprecated API, the closure is run with captured values that"},{"type":"text","text":" "},{"type":"text","text":"represent the “old” state. With the replacement API, the closure is run"},{"type":"text","text":" "},{"type":"text","text":"with captured values that represent the “new” state, which makes it"},{"type":"text","text":" "},{"type":"text","text":"easier to correctly perform updates that rely on supplementary values"},{"type":"text","text":" "},{"type":"text","text":"(that may or may not have changed) in addition to the changed value that"},{"type":"text","text":" "},{"type":"text","text":"triggered the action."}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"This modifier is deprecated and has been replaced with new"},{"type":"text","text":" "},{"type":"text","text":"versions that include either zero or two parameters within the"},{"type":"text","text":" "},{"type":"text","text":"closure, unlike this version that includes one parameter. This"},{"type":"text","text":" "},{"type":"text","text":"deprecated version and the new versions behave differently with"},{"type":"text","text":" "},{"type":"text","text":"respect to how they execute the action closure, specifically when the"},{"type":"text","text":" "},{"type":"text","text":"closure captures other values. Using the deprecated API, the closure"},{"type":"text","text":" "},{"type":"text","text":"is run with captured values that represent the “old” state. With the"},{"type":"text","text":" "},{"type":"text","text":"replacement API, the closure is run with captured values that"},{"type":"text","text":" "},{"type":"text","text":"represent the “new” state, which makes it easier to correctly perform"},{"type":"text","text":" "},{"type":"text","text":"updates that rely on supplementary values (that may or may not have"},{"type":"text","text":" "},{"type":"text","text":"changed) in addition to the changed value that triggered the action."}],"type":"paragraph"}],"style":"important","type":"aside","name":"Important"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/FillShapeView\/onChange(of:perform:)"},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"OpenSwiftUI","relatedModules":["OpenSwiftUICore"]}],"role":"symbol","remoteSource":{"fileName":"ValueActionModifier.swift","url":"https:\/\/github.com\/OpenSwiftUIProject\/OpenSwiftUI\/blob\/main\/Sources\/OpenSwiftUICore\/Modifier\/ViewModifier\/ValueActionModifier.swift#L98"},"externalID":"s:15OpenSwiftUICore4ViewPAAE8onChange2of7performQrqd___yqd__ctSQRd__lF::SYNTHESIZED::s:15OpenSwiftUICore13FillShapeViewV","extendedModule":"OpenSwiftUICore","title":"onChange(of:perform:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore4ViewP","text":"View"}],"platforms":[{"name":"iOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0"},{"name":"macOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"10.15"},{"name":"tvOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0"},{"name":"visionOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"1.0"},{"name":"watchOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"6.0"},{"message":"Use `onChange` with a two or zero parameter action closure instead.","deprecated":true,"unavailable":false,"beta":false}],"symbolKind":"method"},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use `onChange` with a two or zero parameter action closure instead."}],"type":"paragraph"}],"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI/FillShapeView/onChange(of:perform:)":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/FillShapeView\/onChange(of:perform:)","abstract":[{"text":"Performs an action when a specified value changes.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/openswiftui\/fillshapeview\/onchange(of:perform:)","title":"onChange(of:perform:)","type":"topic","deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:15OpenSwiftUICore4ViewP","text":"View"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View":{"url":"\/documentation\/openswiftui\/view","abstract":[{"type":"text","text":"A type that represents part of your app’s user interface and provides"},{"type":"text","text":" "},{"type":"text","text":"modifiers that you use to configure views."}],"role":"symbol","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","title":"View","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"kind":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","url":"\/documentation\/openswiftui","role":"collection","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Declare the user interface and behavior for your app on every platform."}],"title":"OpenSwiftUI"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Binding":{"abstract":[{"type":"text","text":"A property wrapper type that can read and write a value owned by a source of"},{"type":"text","text":" "},{"type":"text","text":"truth."}],"url":"\/documentation\/openswiftui\/binding","type":"topic","navigatorTitle":[{"text":"Binding","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Binding","title":"Binding","kind":"symbol","role":"symbol"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/FillShapeView":{"navigatorTitle":[{"kind":"identifier","text":"FillShapeView"}],"kind":"symbol","title":"FillShapeView","type":"topic","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/FillShapeView","abstract":[{"type":"text","text":"A shape provider that fills its shape."}],"url":"\/documentation\/openswiftui\/fillshapeview","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FillShapeView"}]},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Environment":{"url":"\/documentation\/openswiftui\/environment","identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that reads a value from a view’s environment."}],"title":"Environment","role":"symbol","navigatorTitle":[{"text":"Environment","kind":"identifier"}]},"https://developer.apple.com/documentation/swift/equatable":{"url":"https:\/\/developer.apple.com\/documentation\/swift\/equatable","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/equatable","type":"link","titleInlineContent":[{"text":"Equatable","type":"text"}],"title":"Equatable"}}}